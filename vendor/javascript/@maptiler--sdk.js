import e from"maplibre-gl";export*from"maplibre-gl";import{Base64 as t}from"js-base64";import o from"events";import{config as r,MapStyle as a,mapStylePresetList as n,expandMapStyle as l,MapStyleVariant as i,ReferenceMapStyle as s,geolocation as c}from"@maptiler/client";export{LanguageGeocoding,MapStyle,MapStyleVariant,ReferenceMapStyle,ServiceError,bufferToPixelDataBrowser,circumferenceAtLatitude,coordinates,data,elevation,expandMapStyle,geocoding,geolocation,getAutoLanguageGeocoding,getBufferToPixelDataParser,getTileCache,mapStylePresetList,math,misc,staticMaps,styleToStyle}from"@maptiler/client";import{v4 as u}from"uuid";const p={VISITOR:"visitor",VISITOR_ENGLISH:"visitor_en",STYLE:"style",AUTO:"auto",STYLE_LOCK:"style_lock",LATIN:"name:latin",NON_LATIN:"name:nonlatin",LOCAL:"name",INTERNATIONAL:"name_int",ALBANIAN:"name:sq",AMHARIC:"name:am",ARABIC:"name:ar",ARMENIAN:"name:hy",AZERBAIJANI:"name:az",BASQUE:"name:eu",BELORUSSIAN:"name:be",BENGALI:"name:bn",BOSNIAN:"name:bs",BRETON:"name:br",BULGARIAN:"name:bg",CATALAN:"name:ca",CHINESE:"name:zh",TRADITIONAL_CHINESE:"name:zh-Hant",SIMPLIFIED_CHINESE:"name:zh-Hans",CORSICAN:"name:co",CROATIAN:"name:hr",CZECH:"name:cs",DANISH:"name:da",DUTCH:"name:nl",ENGLISH:"name:en",ESPERANTO:"name:eo",ESTONIAN:"name:et",FINNISH:"name:fi",FRENCH:"name:fr",FRISIAN:"name:fy",GEORGIAN:"name:ka",GERMAN:"name:de",GREEK:"name:el",HEBREW:"name:he",HINDI:"name:hi",HUNGARIAN:"name:hu",ICELANDIC:"name:is",INDONESIAN:"name:id",IRISH:"name:ga",ITALIAN:"name:it",JAPANESE:"name:ja",JAPANESE_HIRAGANA:"name:ja-Hira",JAPANESE_KANA:"name:ja_kana",JAPANESE_LATIN:"name:ja_rm",JAPANESE_2018:"name:ja-Latn",KANNADA:"name:kn",KAZAKH:"name:kk",KOREAN:"name:ko",KOREAN_LATIN:"name:ko-Latn",KURDISH:"name:ku",ROMAN_LATIN:"name:la",LATVIAN:"name:lv",LITHUANIAN:"name:lt",LUXEMBOURGISH:"name:lb",MACEDONIAN:"name:mk",MALAYALAM:"name:ml",MALTESE:"name:mt",NORWEGIAN:"name:no",OCCITAN:"name:oc",PERSIAN:"name:fa",POLISH:"name:pl",PORTUGUESE:"name:pt",PUNJABI:"name:pa",WESTERN_PUNJABI:"name:pnb",ROMANIAN:"name:ro",ROMANSH:"name:rm",RUSSIAN:"name:ru",SCOTTISH_GAELIC:"name:gd",SERBIAN_CYRILLIC:"name:sr",SERBIAN_LATIN:"name:sr-Latn",SLOVAK:"name:sk",SLOVENE:"name:sl",SPANISH:"name:es",SWEDISH:"name:sv",TAMIL:"name:ta",TELUGU:"name:te",THAI:"name:th",TURKISH:"name:tr",UKRAINIAN:"name:uk",URDU:"name:ur",VIETNAMIAN_LATIN:"name:vi",WELSH:"name:cy"};const m=new Set(Object.values(p));function isLanguageSupported(e){return m.has(e)}const h=new Set(Object.values(p));function getBrowserLanguage(){if(typeof navigator==="undefined")return`name:${Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0]}`;const e=Array.from(new Set(navigator.languages.map((e=>`name:${e.split("-")[0]}`)))).filter((e=>h.has(e)));return e.length?e[0]:p.LOCAL}const d={maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiHost:"api.maptiler.com",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:p.STYLE,secondaryLanguage:p.LOCAL,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb-v2/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(d);var g=Object.defineProperty;var __defNormalProp$b=(e,t,o)=>t in e?g(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __publicField$8=(e,t,o)=>{__defNormalProp$b(e,typeof t!=="symbol"?t+"":t,o);return o};const y=u();class SdkConfig extends o{constructor(){super();__publicField$8(this,"primaryLanguage",d.primaryLanguage);__publicField$8(this,"secondaryLanguage");__publicField$8(this,"session",true);__publicField$8(this,"_unit","metric");__publicField$8(this,"_apiKey","")}set unit(e){this._unit=e;this.emit("unit",e)}get unit(){return this._unit}set apiKey(e){this._apiKey=e;r.apiKey=e;this.emit("apiKey",e)}get apiKey(){return this._apiKey}set fetch(e){r.fetch=e}get fetch(){return r.fetch}}const v=new SdkConfig;class LogoControl extends e.LogoControl{onAdd(e){return super.onAdd(e)}}var f=Object.defineProperty;var __defNormalProp$a=(e,t,o)=>t in e?f(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __publicField$7=(e,t,o)=>{__defNormalProp$a(e,typeof t!=="symbol"?t+"":t,o);return o};class MaptilerLogoControl extends LogoControl{constructor(e={}){var t,o;super(e);__publicField$7(this,"logoURL","");__publicField$7(this,"linkURL","");this.logoURL=(t=e.logoURL)!=null?t:d.maptilerLogoURL;this.linkURL=(o=e.linkURL)!=null?o:d.maptilerURL}onAdd(e){var t;this._map=e;this._compact=(t=this.options.compact)!=null&&t;this._container=window.document.createElement("div");this._container.className="maplibregl-ctrl";const o=window.document.createElement("a");o.style.backgroundRepeat="no-repeat";o.style.cursor="pointer";o.style.display="block";o.style.height="23px";o.style.margin="0 0 -4px -4px";o.style.overflow="hidden";o.style.width="88px";o.style.backgroundImage=`url(${this.logoURL})`;o.style.backgroundSize="100px 30px";o.style.width="100px";o.style.height="30px";o.target="_blank";o.rel="noopener";o.href=this.linkURL;o.setAttribute("aria-label","MapTiler logo");o.setAttribute("rel","noopener");this._container.appendChild(o);this._container.style.display="block";this._map.on("resize",this._updateCompact);this._updateCompact();return this._container}}var C=Object.defineProperty;var L=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty;var S=Object.prototype.propertyIsEnumerable;var __defNormalProp$9=(e,t,o)=>t in e?C(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __spreadValues$5=(e,t)=>{for(var o in t||(t={}))A.call(t,o)&&__defNormalProp$9(e,o,t[o]);if(L)for(var o of L(t))S.call(t,o)&&__defNormalProp$9(e,o,t[o]);return e};function enableRTL(){e.getRTLTextPluginStatus()==="unavailable"&&e.setRTLTextPlugin(d.rtlPluginURL,(e=>{e&&console.error(e)}),true)}function bindAll(e,t){e.forEach((e=>{typeof t[e]==="function"&&(t[e]=t[e].bind(t))}))}function DOMcreate(e,t,o){const r=window.document.createElement(e);t!==void 0&&(r.className=t);o&&o.appendChild(r);return r}function DOMremove(e){e.parentNode&&e.parentNode.removeChild(e)}function maptilerCloudTransformRequest(e,t){let o=null;try{o=new URL(e)}catch(t){return{url:e}}if(o.host===d.maptilerApiHost){o.searchParams.has("key")||o.searchParams.append("key",v.apiKey);v.session&&o.searchParams.append("mtsid",y)}return{url:o.href}}function combineTransformRequest(e){return function(t,o){var r;if(e!==void 0){const a=e(t,o);const n=maptilerCloudTransformRequest((r=a==null?void 0:a.url)!=null?r:"");return __spreadValues$5(__spreadValues$5({},a),n)}return maptilerCloudTransformRequest(t)}}function generateRandomString(){return Math.random().toString(36).substring(2)}function isUUID(e){const t=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/gi;return t.test(e)}function jsonParseNoThrow(e){try{return JSON.parse(e)}catch(e){}return null}function styleToStyle(e){return e?typeof e==="string"||e instanceof String?!e.startsWith("http")&&e.toLowerCase().includes(".json")?e:l(e):e instanceof i?e.getExpandedStyleURL():e instanceof s?e.getDefaultVariant().getExpandedStyleURL():e:a[n[0].referenceStyleID].getDefaultVariant().getExpandedStyleURL()}var b=Object.defineProperty;var __defNormalProp$8=(e,t,o)=>t in e?b(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __publicField$6=(e,t,o)=>{__defNormalProp$8(e,typeof t!=="symbol"?t+"":t,o);return o};class MaptilerTerrainControl{constructor(){__publicField$6(this,"_map");__publicField$6(this,"_container");__publicField$6(this,"_terrainButton");bindAll(["_toggleTerrain","_updateTerrainIcon"],this)}onAdd(e){this._map=e;this._container=DOMcreate("div","maplibregl-ctrl maplibregl-ctrl-group");this._terrainButton=DOMcreate("button","maplibregl-ctrl-terrain",this._container);DOMcreate("span","maplibregl-ctrl-icon",this._terrainButton).setAttribute("aria-hidden","true");this._terrainButton.type="button";this._terrainButton.addEventListener("click",this._toggleTerrain);this._updateTerrainIcon();this._map.on("terrain",this._updateTerrainIcon);return this._container}onRemove(){DOMremove(this._container);this._map.off("terrain",this._updateTerrainIcon);this._map=void 0}_toggleTerrain(){this._map.hasTerrain()?this._map.disableTerrain():this._map.enableTerrain();this._updateTerrainIcon()}_updateTerrainIcon(){this._terrainButton.classList.remove("maplibregl-ctrl-terrain");this._terrainButton.classList.remove("maplibregl-ctrl-terrain-enabled");if(this._map.hasTerrain()){this._terrainButton.classList.add("maplibregl-ctrl-terrain-enabled");this._terrainButton.title=this._map._getUIString("TerrainControl.disableTerrain")}else{this._terrainButton.classList.add("maplibregl-ctrl-terrain");this._terrainButton.title=this._map._getUIString("TerrainControl.enableTerrain")}}}class NavigationControl extends e.NavigationControl{onAdd(e){return super.onAdd(e)}}var w=Object.defineProperty;var __defNormalProp$7=(e,t,o)=>t in e?w(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __publicField$5=(e,t,o)=>{__defNormalProp$7(e,typeof t!=="symbol"?t+"":t,o);return o};class MaptilerNavigationControl extends NavigationControl{constructor(){super({showCompass:true,showZoom:true,visualizePitch:true});__publicField$5(this,"_rotateCompassArrow",(()=>{const e=this.options.visualizePitch?`scale(${Math.min(1.5,1/Math.pow(Math.cos(this._map.transform.pitch*(Math.PI/180)),.5))}) rotateX(${Math.min(70,this._map.transform.pitch)}deg) rotateZ(${this._map.transform.angle*(180/Math.PI)}deg)`:`rotate(${this._map.transform.angle*(180/Math.PI)}deg)`;this._compassIcon.style.transform=e}));this._compass.removeEventListener("click",this._compass.clickFunction);this._compass.addEventListener("click",(e=>{{const t=this._map.getPitch();t===0?this._map.easeTo({pitch:Math.min(this._map.getMaxPitch(),80)}):this.options.visualizePitch?this._map.resetNorthPitch({},{originalEvent:e}):this._map.resetNorth({},{originalEvent:e})}}))}_createButton(e,t){const o=super._createButton(e,t);o.clickFunction=t;return o}}class GeolocateControl extends e.GeolocateControl{onAdd(e){return super.onAdd(e)}}var R=Object.defineProperty;var T=Object.defineProperties;var P=Object.getOwnPropertyDescriptors;var O=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty;var I=Object.prototype.propertyIsEnumerable;var __defNormalProp$6=(e,t,o)=>t in e?R(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __spreadValues$4=(e,t)=>{for(var o in t||(t={}))x.call(t,o)&&__defNormalProp$6(e,o,t[o]);if(O)for(var o of O(t))I.call(t,o)&&__defNormalProp$6(e,o,t[o]);return e};var __spreadProps$3=(e,t)=>T(e,P(t));var __publicField$4=(e,t,o)=>{__defNormalProp$6(e,typeof t!=="symbol"?t+"":t,o);return o};const _=e.Marker;const E=e.LngLat;const N=e.LngLatBounds;class MaptilerGeolocateControl extends GeolocateControl{constructor(){super(...arguments);__publicField$4(this,"lastUpdatedCenter",new E(0,0));
/**
     * Update the camera location to center on the current position
     *
     * @param {Position} position the Geolocation API Position
     * @private
     */__publicField$4(this,"_updateCamera",(e=>{var t,o,r;const a=new E(e.coords.longitude,e.coords.latitude);const n=e.coords.accuracy;const l=this._map.getBearing();const i=__spreadProps$3(__spreadValues$4({bearing:l},this.options.fitBoundsOptions),{linear:true});const s=this._map.getZoom();s>((r=(o=(t=this.options)==null?void 0:t.fitBoundsOptions)==null?void 0:o.maxZoom)!=null?r:30)&&(i.zoom=s);this._map.fitBounds(N.fromLngLat(a,n),i,{geolocateSource:true});let c=false;const flagFittingDisruption=()=>{c=true};this._map.once("click",flagFittingDisruption);this._map.once("dblclick",flagFittingDisruption);this._map.once("dragstart",flagFittingDisruption);this._map.once("mousedown",flagFittingDisruption);this._map.once("touchstart",flagFittingDisruption);this._map.once("wheel",flagFittingDisruption);this._map.once("moveend",(()=>{this._map.off("click",flagFittingDisruption);this._map.off("dblclick",flagFittingDisruption);this._map.off("dragstart",flagFittingDisruption);this._map.off("mousedown",flagFittingDisruption);this._map.off("touchstart",flagFittingDisruption);this._map.off("wheel",flagFittingDisruption);c||(this.lastUpdatedCenter=this._map.getCenter())}))}));__publicField$4(this,"_setupUI",(e=>{this.lastUpdatedCenter=this._map.getCenter();this._container.addEventListener("contextmenu",(e=>e.preventDefault()));this._geolocateButton=DOMcreate("button","maplibregl-ctrl-geolocate",this._container);DOMcreate("span","maplibregl-ctrl-icon",this._geolocateButton).setAttribute("aria-hidden","true");this._geolocateButton.type="button";if(e===false){const e=this._map._getUIString("GeolocateControl.LocationNotAvailable");this._geolocateButton.disabled=true;this._geolocateButton.title=e;this._geolocateButton.setAttribute("aria-label",e)}else{const e=this._map._getUIString("GeolocateControl.FindMyLocation");this._geolocateButton.title=e;this._geolocateButton.setAttribute("aria-label",e)}if(this.options.trackUserLocation){this._geolocateButton.setAttribute("aria-pressed","false");this._watchState="OFF"}if(this.options.showUserLocation){this._dotElement=DOMcreate("div","maplibregl-user-location-dot");this._userLocationDotMarker=new _({element:this._dotElement});this._circleElement=DOMcreate("div","maplibregl-user-location-accuracy-circle");this._accuracyCircleMarker=new _({element:this._circleElement,pitchAlignment:"map"});this.options.trackUserLocation&&(this._watchState="OFF");this._map.on("move",this._onZoom)}this._geolocateButton.addEventListener("click",this.trigger.bind(this));this._setup=true;this.options.trackUserLocation&&this._map.on("moveend",(e=>{const t=e.originalEvent&&e.originalEvent.type==="resize";const o=this.lastUpdatedCenter.distanceTo(this._map.getCenter());if(!e.geolocateSource&&this._watchState==="ACTIVE_LOCK"&&!t&&o>1){this._watchState="BACKGROUND";this._geolocateButton.classList.add("maplibregl-ctrl-geolocate-background");this._geolocateButton.classList.remove("maplibregl-ctrl-geolocate-active");this.fire(new Event("trackuserlocationend"))}}))}));__publicField$4(this,"_onZoom",(()=>{this.options.showUserLocation&&this.options.showAccuracyCircle&&this._updateCircleRadius()}))}_updateCircleRadius(){if(this._watchState!=="BACKGROUND"&&this._watchState!=="ACTIVE_LOCK")return;const e=[this._lastKnownPosition.coords.longitude,this._lastKnownPosition.coords.latitude];const t=this._map.project(e);const o=this._map.unproject([t.x,t.y]);const r=this._map.unproject([t.x+20,t.y]);const a=o.distanceTo(r)/20;const n=Math.ceil(2*this._accuracy/a);this._circleElement.style.width=`${n}px`;this._circleElement.style.height=`${n}px`}}class AttributionControl extends e.AttributionControl{onAdd(e){return super.onAdd(e)}}class ScaleControl extends e.ScaleControl{onAdd(e){return super.onAdd(e)}}class FullscreenControl extends e.FullscreenControl{onAdd(e){return super.onAdd(e)}}var M=Object.defineProperty;var k=Object.defineProperties;var z=Object.getOwnPropertyDescriptors;var B=Object.getOwnPropertySymbols;var F=Object.prototype.hasOwnProperty;var U=Object.prototype.propertyIsEnumerable;var __defNormalProp$5=(e,t,o)=>t in e?M(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __spreadValues$3=(e,t)=>{for(var o in t||(t={}))F.call(t,o)&&__defNormalProp$5(e,o,t[o]);if(B)for(var o of B(t))U.call(t,o)&&__defNormalProp$5(e,o,t[o]);return e};var __spreadProps$2=(e,t)=>k(e,z(t));var __publicField$3=(e,t,o)=>{__defNormalProp$5(e,typeof t!=="symbol"?t+"":t,o);return o};var __accessCheck=(e,t,o)=>{if(!t.has(e))throw TypeError("Cannot "+o)};var __privateGet=(e,t,o)=>{__accessCheck(e,t,"read from private field");return o?o.call(e):t.get(e)};var __privateAdd=(e,t,o)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,o)};var __privateSet=(e,t,o,r)=>{__accessCheck(e,t,"write to private field");r?r.call(e,o):t.set(e,o);return o};var __privateMethod=(e,t,o)=>{__accessCheck(e,t,"access private method");return o};var D,j,V,H,G,K,W,$,Z,Y,q,J,X;class Minimap{constructor(e,t){__privateAdd(this,$);__privateAdd(this,Y);__privateAdd(this,J);__privateAdd(this,D,void 0);__publicField$3(this,"map");__privateAdd(this,j,void 0);__privateAdd(this,V,void 0);__privateAdd(this,H,void 0);__privateAdd(this,G,void 0);__privateAdd(this,K,false);__privateAdd(this,W,void 0);var o;e.style!==void 0&&__privateSet(this,K,true);__privateSet(this,D,__spreadProps$2(__spreadValues$3(__spreadProps$2(__spreadValues$3({zoomAdjust:-4,position:"top-right"},t),{forceNoAttributionControl:true,attributionControl:false,navigationControl:false,geolocateControl:false,maptilerLogo:false,minimap:false,hash:false,pitchAdjust:false}),e),{containerStyle:__spreadValues$3({border:"1px solid #000",width:"400px",height:"300px"},(o=e.containerStyle)!=null?o:{})}));if(e.lockZoom!==void 0){__privateGet(this,D).minZoom=e.lockZoom;__privateGet(this,D).maxZoom=e.lockZoom}}setStyle(e,t){__privateGet(this,K)||this.map.setStyle(e,t);__privateMethod(this,Y,q).call(this)}addLayer(e,t){__privateGet(this,K)||this.map.addLayer(e,t);__privateMethod(this,Y,q).call(this);return this.map}moveLayer(e,t){__privateGet(this,K)||this.map.moveLayer(e,t);__privateMethod(this,Y,q).call(this);return this.map}removeLayer(e){__privateGet(this,K)||this.map.removeLayer(e);__privateMethod(this,Y,q).call(this);return this}setLayerZoomRange(e,t,o){__privateGet(this,K)||this.map.setLayerZoomRange(e,t,o);__privateMethod(this,Y,q).call(this);return this}setFilter(e,t,o){__privateGet(this,K)||this.map.setFilter(e,t,o);__privateMethod(this,Y,q).call(this);return this}setPaintProperty(e,t,o,r){__privateGet(this,K)||this.map.setPaintProperty(e,t,o,r);__privateMethod(this,Y,q).call(this);return this}setLayoutProperty(e,t,o,r){__privateGet(this,K)||this.map.setLayoutProperty(e,t,o,r);__privateMethod(this,Y,q).call(this);return this}setGlyphs(e,t){__privateGet(this,K)||this.map.setGlyphs(e,t);__privateMethod(this,Y,q).call(this);return this}onAdd(e){__privateSet(this,j,e);__privateSet(this,V,DOMcreate("div","maplibregl-ctrl maplibregl-ctrl-group"));for(const[e,t]of Object.entries(__privateGet(this,D).containerStyle))__privateGet(this,V).style.setProperty(e,t);__privateGet(this,D).container=__privateGet(this,V);__privateGet(this,D).zoom=e.getZoom()+__privateGet(this,D).zoomAdjust;this.map=new Map(__privateGet(this,D));this.map.once("style.load",(()=>{this.map.resize()}));this.map.once("load",(()=>{__privateMethod(this,$,Z).call(this,__privateGet(this,D).parentRect);__privateSet(this,W,__privateMethod(this,J,X).call(this))}));return __privateGet(this,V)}onRemove(){var e;(e=__privateGet(this,W))==null?void 0:e.call(this);DOMremove(__privateGet(this,V))}}D=new WeakMap;j=new WeakMap;V=new WeakMap;H=new WeakMap;G=new WeakMap;K=new WeakMap;W=new WeakMap;$=new WeakSet;Z=function(e){if(e!==void 0&&(e.linePaint!==void 0||e.fillPaint!==void 0)){__privateSet(this,G,{type:"Feature",properties:{name:"parentRect"},geometry:{type:"Polygon",coordinates:[[[],[],[],[],[]]]}});this.map.addSource("parentRect",{type:"geojson",data:__privateGet(this,G)});e.lineLayout===void 0&&e.linePaint===void 0||this.map.addLayer({id:"parentRectOutline",type:"line",source:"parentRect",layout:__spreadValues$3({},e.lineLayout),paint:__spreadValues$3({"line-color":"#FFF","line-width":1,"line-opacity":.85},e.linePaint)});e.fillPaint!==void 0&&this.map.addLayer({id:"parentRectFill",type:"fill",source:"parentRect",layout:{},paint:__spreadValues$3({"fill-color":"#08F","fill-opacity":.135},e.fillPaint)});__privateMethod(this,Y,q).call(this)}};Y=new WeakSet;q=function(){if(__privateGet(this,G)===void 0)return;const{devicePixelRatio:e}=window;const t=__privateGet(this,j).getCanvas();const o=t.width/e;const r=t.height/e;const a=__privateGet(this,j).unproject.bind(__privateGet(this,j));const n=a([0,0]);const l=a([o,0]);const i=a([0,r]);const s=a([o,r]);__privateGet(this,G).geometry.coordinates=[[i.toArray(),s.toArray(),l.toArray(),n.toArray(),i.toArray()]];const c=this.map.getSource("parentRect");c.setData(__privateGet(this,G))};J=new WeakSet;X=function(){const{pitchAdjust:e}=__privateGet(this,D);const parentCallback=()=>{sync("parent")};const minimapCallback=()=>{sync("minimap")};const on=()=>{__privateGet(this,j).on("move",parentCallback);this.map.on("move",minimapCallback)};const off=()=>{__privateGet(this,j).off("move",parentCallback);this.map.off("move",minimapCallback)};const sync=t=>{var o;off();const r=t==="parent"?__privateGet(this,j):this.map;const a=t==="parent"?this.map:__privateGet(this,j);const n=r.getCenter();const l=r.getZoom()+((o=__privateGet(this,D).zoomAdjust)!=null?o:-4)*(t==="parent"?1:-1);const i=r.getBearing();const s=r.getPitch();a.jumpTo({center:n,zoom:l,bearing:i,pitch:e?s:0});__privateMethod(this,Y,q).call(this);on()};on();return()=>{off()}};var Q=Object.defineProperty;var ee=Object.defineProperties;var te=Object.getOwnPropertyDescriptors;var oe=Object.getOwnPropertySymbols;var re=Object.prototype.hasOwnProperty;var ae=Object.prototype.propertyIsEnumerable;var __defNormalProp$4=(e,t,o)=>t in e?Q(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __spreadValues$2=(e,t)=>{for(var o in t||(t={}))re.call(t,o)&&__defNormalProp$4(e,o,t[o]);if(oe)for(var o of oe(t))ae.call(t,o)&&__defNormalProp$4(e,o,t[o]);return e};var __spreadProps$1=(e,t)=>ee(e,te(t));var __publicField$2=(e,t,o)=>{__defNormalProp$4(e,typeof t!=="symbol"?t+"":t,o);return o};var __async$1=(e,t,o)=>new Promise(((r,a)=>{var fulfilled=e=>{try{step(o.next(e))}catch(e){a(e)}};var rejected=e=>{try{step(o.throw(e))}catch(e){a(e)}};var step=e=>e.done?r(e.value):Promise.resolve(e.value).then(fulfilled,rejected);step((o=o.apply(e,t)).next())}));const ne={POINT:"POINT",COUNTRY:"COUNTRY"};class Map extends e.Map{constructor(e){var t,o,r;e.apiKey&&(v.apiKey=e.apiKey);const a=styleToStyle(e.style);const n=location.hash;v.apiKey||console.warn("MapTiler Cloud API key is not set. Visit https://maptiler.com and try Cloud for free!");super(__spreadProps$1(__spreadValues$2({},e),{style:a,maplibreLogo:false,transformRequest:combineTransformRequest(e.transformRequest)}));__publicField$2(this,"isTerrainEnabled",false);__publicField$2(this,"terrainExaggeration",1);__publicField$2(this,"primaryLanguage");__publicField$2(this,"terrainGrowing",false);__publicField$2(this,"terrainFlattening",false);__publicField$2(this,"minimap");__publicField$2(this,"forceLanguageUpdate");__publicField$2(this,"languageAlwaysBeenStyle");__publicField$2(this,"isReady",false);this.primaryLanguage=(t=e.language)!=null?t:v.primaryLanguage;this.forceLanguageUpdate=this.primaryLanguage!==p.STYLE&&this.primaryLanguage!==p.STYLE_LOCK;this.languageAlwaysBeenStyle=this.primaryLanguage===p.STYLE;this.terrainExaggeration=(o=e.terrainExaggeration)!=null?o:this.terrainExaggeration;this.once("styledata",(()=>__async$1(this,null,(function*(){if(!e.geolocate)return;if(e.center)return;if(e.hash&&!!n)return;try{if(e.geolocate===ne.COUNTRY){yield this.fitToIpBounds();return}}catch(e){console.warn(e.message)}let t;try{yield this.centerOnIpPoint(e.zoom);t=this.getCameraHash()}catch(e){console.warn(e.message)}const o=yield navigator.permissions.query({name:"geolocation"});o.state==="granted"&&navigator.geolocation.getCurrentPosition((o=>{t===this.getCameraHash()&&(this.terrain?this.easeTo({center:[o.coords.longitude,o.coords.latitude],zoom:e.zoom||12,duration:2e3}):this.once("terrain",(()=>{this.easeTo({center:[o.coords.longitude,o.coords.latitude],zoom:e.zoom||12,duration:2e3})})))}),null,{maximumAge:864e5,timeout:5e3,enableHighAccuracy:false})}))));this.on("styledata",(()=>{this.setPrimaryLanguage(this.primaryLanguage)}));this.on("styledata",(()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}));this.once("load",(()=>__async$1(this,null,(function*(){enableRTL()}))));this.once("load",(()=>__async$1(this,null,(function*(){let t={logo:null};try{const e=Object.keys(this.style.sourceCaches).map((e=>this.getSource(e))).filter((e=>e&&"url"in e&&typeof e.url==="string"&&(e==null?void 0:e.url.includes("tiles.json"))));const o=new URL(e[0].url);o.searchParams.has("key")||o.searchParams.append("key",v.apiKey);const r=yield fetch(o.href);t=yield r.json()}catch(e){}if(e.forceNoAttributionControl!==true)if("logo"in t&&t.logo){const o=t.logo;this.addControl(new MaptilerLogoControl({logoURL:o}),e.logoPosition);e.attributionControl===false&&this.addControl(new AttributionControl({customAttribution:e.customAttribution}))}else e.maptilerLogo&&this.addControl(new MaptilerLogoControl,e.logoPosition);if(e.scaleControl){const t=e.scaleControl===true||e.scaleControl===void 0?"bottom-right":e.scaleControl;const o=new ScaleControl({unit:v.unit});this.addControl(o,t);v.on("unit",(e=>{o.setUnit(e)}))}if(e.navigationControl!==false){const t=e.navigationControl===true||e.navigationControl===void 0?"top-right":e.navigationControl;this.addControl(new MaptilerNavigationControl,t)}if(e.geolocateControl!==false){const t=e.geolocateControl===true||e.geolocateControl===void 0?"top-right":e.geolocateControl;this.addControl(new MaptilerGeolocateControl({positionOptions:{enableHighAccuracy:true,maximumAge:0,timeout:6e3},fitBoundsOptions:{maxZoom:15},trackUserLocation:true,showAccuracyCircle:true,showUserLocation:true}),t)}if(e.terrainControl){const t=e.terrainControl===true||e.terrainControl===void 0?"top-right":e.terrainControl;this.addControl(new MaptilerTerrainControl,t)}if(e.fullscreenControl){const t=e.fullscreenControl===true||e.fullscreenControl===void 0?"top-right":e.fullscreenControl;this.addControl(new FullscreenControl({}),t)}this.isReady=true;this.fire("ready",{target:this})}))));let l=false;let i=false;let s;this.once("ready",(()=>{l=true;i&&this.fire("loadWithTerrain",s)}));this.once("style.load",(()=>{var t;const{minimap:o}=e;if(typeof o==="object"){const{zoom:r,center:a,style:n,language:l,apiKey:i,maptilerLogo:s,antialias:c,refreshExpiredTiles:u,maxBounds:p,scrollZoom:m,minZoom:h,maxZoom:d,boxZoom:g,locale:y,fadeDuration:v,crossSourceCollisions:f,clickTolerance:C,bounds:L,fitBoundsOptions:A,pixelRatio:S,validateStyle:b}=e;this.minimap=new Minimap(o,{zoom:r,center:a,style:n,language:l,apiKey:i,container:"null",maptilerLogo:s,antialias:c,refreshExpiredTiles:u,maxBounds:p,scrollZoom:m,minZoom:h,maxZoom:d,boxZoom:g,locale:y,fadeDuration:v,crossSourceCollisions:f,clickTolerance:C,bounds:L,fitBoundsOptions:A,pixelRatio:S,validateStyle:b});this.addControl(this.minimap,(t=o.position)!=null?t:"bottom-left")}else if(o===true){this.minimap=new Minimap({},e);this.addControl(this.minimap,"bottom-left")}else if(o!==void 0&&o!==false){this.minimap=new Minimap({},e);this.addControl(this.minimap,o)}}));const terrainCallback=e=>{if(e.terrain){i=true;s={type:"loadWithTerrain",target:this,terrain:e.terrain};this.off("terrain",terrainCallback);l&&this.fire("loadWithTerrain",s)}};this.on("terrain",terrainCallback);e.terrain&&this.enableTerrain((r=e.terrainExaggeration)!=null?r:this.terrainExaggeration)}
/**
   * Awaits for _this_ Map instance to be "loaded" and returns a Promise to the Map.
   * If _this_ Map instance is already loaded, the Promise is resolved directly,
   * otherwise, it is resolved as a result of the "load" event.
   * @returns
   */onLoadAsync(){return __async$1(this,null,(function*(){return new Promise((e=>{if(this.loaded())return e(this);this.once("load",(()=>{e(this)}))}))}))}onReadyAsync(){return __async$1(this,null,(function*(){return new Promise((e=>{if(this.isReady)return e(this);this.once("ready",(()=>{e(this)}))}))}))}
/**
   * Awaits for _this_ Map instance to be "loaded" as well as with terrain being non-null for the first time
   * and returns a Promise to the Map.
   * If _this_ Map instance is already loaded with terrain, the Promise is resolved directly,
   * otherwise, it is resolved as a result of the "loadWithTerrain" event.
   * @returns
   */onLoadWithTerrainAsync(){return __async$1(this,null,(function*(){return new Promise((e=>{if(this.isReady&&this.terrain)return e(this);this.once("loadWithTerrain",(()=>{e(this)}))}))}))}setStyle(e,t){var o;(o=this.minimap)==null?void 0:o.setStyle(e);this.forceLanguageUpdate=true;this.once("idle",(()=>{this.forceLanguageUpdate=false}));return super.setStyle(styleToStyle(e),t)}
/**
   * Adds a [MapLibre style layer](https://maplibre.org/maplibre-style-spec/layers)
   * to the map's style.
   *
   * A layer defines how data from a specified source will be styled. Read more about layer types
   * and available paint and layout properties in the [MapLibre Style Specification](https://maplibre.org/maplibre-style-spec/layers).
   *
   * @param layer - The layer to add,
   * conforming to either the MapLibre Style Specification's [layer definition](https://maplibre.org/maplibre-style-spec/layers) or,
   * less commonly, the {@link CustomLayerInterface} specification.
   * The MapLibre Style Specification's layer definition is appropriate for most layers.
   *
   * @param beforeId - The ID of an existing layer to insert the new layer before,
   * resulting in the new layer appearing visually beneath the existing layer.
   * If this argument is not specified, the layer will be appended to the end of the layers array
   * and appear visually above all other layers.
   *
   * @returns `this`
   */addLayer(e,t){var o;(o=this.minimap)==null?void 0:o.addLayer(e,t);return super.addLayer(e,t)}
/**
   * Moves a layer to a different z-position.
   *
   * @param id - The ID of the layer to move.
   * @param beforeId - The ID of an existing layer to insert the new layer before. When viewing the map, the `id` layer will appear beneath the `beforeId` layer. If `beforeId` is omitted, the layer will be appended to the end of the layers array and appear above all other layers on the map.
   * @returns `this`
   *
   * @example
   * Move a layer with ID 'polygon' before the layer with ID 'country-label'. The `polygon` layer will appear beneath the `country-label` layer on the map.
   * ```ts
   * map.moveLayer('polygon', 'country-label');
   * ```
   */moveLayer(e,t){var o;(o=this.minimap)==null?void 0:o.moveLayer(e,t);return super.moveLayer(e,t)}
/**
   * Removes the layer with the given ID from the map's style.
   *
   * An {@link ErrorEvent} will be fired if the image parameter is invald.
   *
   * @param id - The ID of the layer to remove
   * @returns `this`
   *
   * @example
   * If a layer with ID 'state-data' exists, remove it.
   * ```ts
   * if (map.getLayer('state-data')) map.removeLayer('state-data');
   * ```
   */removeLayer(e){var t;(t=this.minimap)==null?void 0:t.removeLayer(e);return super.removeLayer(e)}setLayerZoomRange(e,t,o){var r;(r=this.minimap)==null?void 0:r.setLayerZoomRange(e,t,o);return super.setLayerZoomRange(e,t,o)}setFilter(e,t,o){var r;(r=this.minimap)==null?void 0:r.setFilter(e,t,o);return super.setFilter(e,t,o)}
/**
   * Sets the value of a paint property in the specified style layer.
   *
   * @param layerId - The ID of the layer to set the paint property in.
   * @param name - The name of the paint property to set.
   * @param value - The value of the paint property to set.
   * Must be of a type appropriate for the property, as defined in the [MapLibre Style Specification](https://maplibre.org/maplibre-style-spec/).
   * @param options - Options object.
   * @returns `this`
   * @example
   * ```ts
   * map.setPaintProperty('my-layer', 'fill-color', '#faafee');
   * ```
   */setPaintProperty(e,t,o,r){var a;(a=this.minimap)==null?void 0:a.setPaintProperty(e,t,o,r);return super.setPaintProperty(e,t,o,r)}
/**
   * Sets the value of a layout property in the specified style layer.
   * Layout properties define how the layer is styled.
   * Layout properties for layers of the same type are documented together.
   * Layers of different types have different layout properties.
   * See the [MapLibre Style Specification](https://maplibre.org/maplibre-style-spec/) for the complete list of layout properties.
   * @param layerId - The ID of the layer to set the layout property in.
   * @param name - The name of the layout property to set.
   * @param value - The value of the layout property to set.
   * Must be of a type appropriate for the property, as defined in the [MapLibre Style Specification](https://maplibre.org/maplibre-style-spec/).
   * @param options - Options object.
   * @returns `this`
   */setLayoutProperty(e,t,o,r){var a;(a=this.minimap)==null?void 0:a.setLayoutProperty(e,t,o,r);return super.setLayoutProperty(e,t,o,r)}
/**
   * Sets the value of the style's glyphs property.
   *
   * @param glyphsUrl - Glyph URL to set. Must conform to the [MapLibre Style Specification](https://maplibre.org/maplibre-style-spec/glyphs/).
   * @param options - Options object.
   * @returns `this`
   * @example
   * ```ts
   * map.setGlyphs('https://demotiles.maplibre.org/font/{fontstack}/{range}.pbf');
   * ```
   */setGlyphs(e,t){var o;(o=this.minimap)==null?void 0:o.setGlyphs(e,t);return super.setGlyphs(e,t)}getStyleLanguage(){return this.style.stylesheet.metadata?typeof this.style.stylesheet.metadata!=="object"?null:"maptiler:language"in this.style.stylesheet.metadata&&typeof this.style.stylesheet.metadata["maptiler:language"]==="string"?this.style.stylesheet.metadata["maptiler:language"]:null:null}setLanguage(e){var t,o;(o=(t=this.minimap)==null?void 0:t.map)==null?void 0:o.setLanguage(e);this.onStyleReady((()=>{this.setPrimaryLanguage(e)}))}setPrimaryLanguage(e){const t=this.getStyleLanguage();if(!(e===p.STYLE&&(t===p.AUTO||t===p.VISITOR))){e!==p.STYLE&&(this.languageAlwaysBeenStyle=false);if(this.languageAlwaysBeenStyle)return;if(this.primaryLanguage===e&&!this.forceLanguageUpdate)return}if(!isLanguageSupported(e)){console.warn(`The language "${e}" is not supported.`);return}if(this.primaryLanguage===p.STYLE_LOCK){console.warn("The language cannot be changed because this map has been instantiated with the STYLE_LOCK language flag.");return}this.primaryLanguage=e;let o=e;if(e===p.STYLE){if(!t){console.warn("The style has no default languages.");return}if(!isLanguageSupported(t)){console.warn("The language defined in the style is not valid.");return}o=t}let r=p.LOCAL;let a=`{${r}}`;if(o==p.VISITOR){r=getBrowserLanguage();a=["case",["all",["has",r],["has",p.LOCAL]],["case",["==",["get",r],["get",p.LOCAL]],["get",p.LOCAL],["format",["get",r],{"font-scale":.8},"\n",["get",p.LOCAL],{"font-scale":1.1}]],["get",p.LOCAL]]}else if(o==p.VISITOR_ENGLISH){r=p.ENGLISH;a=["case",["all",["has",r],["has",p.LOCAL]],["case",["==",["get",r],["get",p.LOCAL]],["get",p.LOCAL],["format",["get",r],{"font-scale":.8},"\n",["get",p.LOCAL],{"font-scale":1.1}]],["get",p.LOCAL]]}else if(o===p.AUTO){r=getBrowserLanguage();a=["case",["has",r],["get",r],["get",p.LOCAL]]}else if(o===p.LOCAL){r=p.LOCAL;a=`{${r}}`}else{r=o;a=["case",["has",r],["get",r],["get",p.LOCAL]]}const{layers:n}=this.getStyle();for(const{id:e,layout:t}of n){if(!t)continue;if(!("text-field"in t))continue;const o=this.getLayoutProperty(e,"text-field");typeof o==="string"&&(o.toLowerCase().includes("ref")||o.toLowerCase().includes("housenumber"))||this.setLayoutProperty(e,"text-field",a)}}
/**
   * Get the primary language
   * @returns
   */getPrimaryLanguage(){return this.primaryLanguage}
/**
   * Get the exaggeration factor applied to the terrain
   * @returns
   */getTerrainExaggeration(){return this.terrainExaggeration}
/**
   * Know if terrian is enabled or not
   * @returns
   */hasTerrain(){return this.isTerrainEnabled}growTerrain(e,t=1e3){if(!this.terrain)return;const o=performance.now();const r=this.terrain.exaggeration;const a=e-r;const updateExaggeration=()=>{if(!this.terrain)return;if(this.terrainFlattening)return;const n=(performance.now()-o)/t;if(n<.99){const e=1-Math.pow(1-n,4);const t=r+e*a;this.terrain.exaggeration=t;requestAnimationFrame(updateExaggeration)}else{this.terrainGrowing=false;this.terrainFlattening=false;this.terrain.exaggeration=e}this.triggerRepaint()};this.terrainGrowing=true;this.terrainFlattening=false;requestAnimationFrame(updateExaggeration)}enableTerrain(e=this.terrainExaggeration){if(e<0){console.warn("Terrain exaggeration cannot be negative.");return}const dataEventTerrainGrow=t=>__async$1(this,null,(function*(){if(!this.terrain)return;if(t.type!=="data"||t.dataType!=="source"||!("source"in t))return;if(t.sourceId!=="maptiler-terrain")return;const o=t.source;if(o.type==="raster-dem"&&t.isSourceLoaded){this.off("data",dataEventTerrainGrow);this.growTerrain(e)}}));const addTerrain=()=>{this.isTerrainEnabled=true;this.terrainExaggeration=e;this.on("data",dataEventTerrainGrow);this.addSource(d.terrainSourceId,{type:"raster-dem",url:d.terrainSourceURL});this.setTerrain({source:d.terrainSourceId,exaggeration:0})};if(this.getTerrain()){this.isTerrainEnabled=true;this.growTerrain(e)}else this.loaded()||this.isTerrainEnabled?addTerrain():this.once("load",(()=>{this.getTerrain()&&this.getSource(d.terrainSourceId)||addTerrain()}))}disableTerrain(){if(!this.terrain)return;this.isTerrainEnabled=false;const e=1e3;const t=performance.now();const o=this.terrain.exaggeration;const updateExaggeration=()=>{if(!this.terrain)return;if(this.terrainGrowing)return;const r=(performance.now()-t)/e;if(r<.99){const e=Math.pow(1-r,4);const t=o*e;this.terrain.exaggeration=t;requestAnimationFrame(updateExaggeration)}else{this.terrain.exaggeration=0;this.terrainGrowing=false;this.terrainFlattening=false;this.setTerrain();this.getSource(d.terrainSourceId)&&this.removeSource(d.terrainSourceId)}this.triggerRepaint()};this.terrainGrowing=false;this.terrainFlattening=true;requestAnimationFrame(updateExaggeration)}setTerrainExaggeration(e,t=true){if(!t&&this.terrain){this.terrainExaggeration=e;this.terrain.exaggeration=e;this.triggerRepaint()}else this.enableTerrain(e)}onStyleReady(e){this.isStyleLoaded()?e():this.once("styledata",(()=>{e()}))}fitToIpBounds(){return __async$1(this,null,(function*(){const e=yield c.info();this.fitBounds(e.country_bounds,{duration:0,padding:100})}))}centerOnIpPoint(e){return __async$1(this,null,(function*(){var t,o;const r=yield c.info();this.jumpTo({center:[(t=r==null?void 0:r.longitude)!=null?t:0,(o=r==null?void 0:r.latitude)!=null?o:0],zoom:e||11})}))}getCameraHash(){const e=new Float32Array(5);const o=this.getCenter();e[0]=o.lng;e[1]=o.lat;e[2]=this.getZoom();e[3]=this.getPitch();e[4]=this.getBearing();return t.fromUint8Array(new Uint8Array(e.buffer))}getSdkConfig(){return v}
/**
   * Get the MapTiler session ID. Convenient to dispatch to externaly built component
   * that do not directly have access to the SDK configuration but do have access to a Map instance.
   * @returns
   */getMaptilerSessionId(){return y}
/**
   *  Updates the requestManager's transform request with a new function.
   *
   * @param transformRequest A callback run before the Map makes a request for an external URL. The callback can be used to modify the url, set headers, or set the credentials property for cross-origin requests.
   *    Expected to return an object with a `url` property and optionally `headers` and `credentials` properties
   *
   * @returns {Map} `this`
   *
   *  @example
   *  map.setTransformRequest((url: string, resourceType: string) => {});
   */setTransformRequest(e){super.setTransformRequest(combineTransformRequest(e));return this}loadImageAsync(e){return __async$1(this,null,(function*(){return new Promise(((t,o)=>{this.loadImage(e,((e,r)=>{e?o(e):t(r)}))}))}))}}class Marker extends e.Marker{addTo(e){return super.addTo(e)}}class Popup extends e.Popup{addTo(e){return super.addTo(e)}}class Style extends e.Style{constructor(e,t={}){super(e,t)}}class CanvasSource extends e.CanvasSource{onAdd(e){super.onAdd(e)}}class GeoJSONSource extends e.GeoJSONSource{onAdd(e){super.onAdd(e)}}class ImageSource extends e.ImageSource{onAdd(e){super.onAdd(e)}}class RasterTileSource extends e.RasterTileSource{onAdd(e){super.onAdd(e)}}class RasterDEMTileSource extends e.RasterDEMTileSource{onAdd(e){super.onAdd(e)}}class VectorTileSource extends e.VectorTileSource{onAdd(e){super.onAdd(e)}}class VideoSource extends e.VideoSource{onAdd(e){super.onAdd(e)}}class TerrainControl extends e.TerrainControl{onAdd(e){return super.onAdd(e)}}var le=Object.defineProperty;var __defNormalProp$3=(e,t,o)=>t in e?le(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __publicField$1=(e,t,o)=>{__defNormalProp$3(e,typeof t!=="symbol"?t+"":t,o);return o};class Point{constructor(e,t){__publicField$1(this,"x");__publicField$1(this,"y");this.x=e;this.y=t}_matMult(e){const t=e[0]*this.x+e[1]*this.y;const o=e[2]*this.x+e[3]*this.y;this.x=t;this.y=o;return this}_add(e){this.x+=e.x;this.y+=e.y;return this}_sub(e){this.x-=e.x;this.y-=e.y;return this}_mult(e){this.x*=e;this.y*=e;return this}_div(e){this.x/=e;this.y/=e;return this}_multByPoint(e){this.x*=e.x;this.y*=e.y;return this}_divByPoint(e){this.x/=e.x;this.y/=e.y;return this}_unit(){this._div(this.mag());return this}_perp(){const e=this.y;this.y=this.x;this.x=-e;return this}_rotate(e){const t=Math.cos(e);const o=Math.sin(e);const r=t*this.x-o*this.y;const a=o*this.x+t*this.y;this.x=r;this.y=a;return this}_rotateAround(e,t){const o=Math.cos(e);const r=Math.sin(e);const a=t.x+o*(this.x-t.x)-r*(this.y-t.y);const n=t.y+r*(this.x-t.x)+o*(this.y-t.y);this.x=a;this.y=n;return this}_round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this}clone(){return new Point(this.x,this.y)}
/**
   * Add this point's x & y coordinates to another point,
   * yielding a new point.
   * @param {Point} p the other point
   * @return {Point} output point
   */add(e){return this.clone()._add(e)}
/**
   * Subtract this point's x & y coordinates to from point,
   * yielding a new point.
   * @param {Point} p the other point
   * @return {Point} output point
   */sub(e){return this.clone()._sub(e)}
/**
   * Multiply this point's x & y coordinates by point,
   * yielding a new point.
   * @param {Point} p the other point
   * @return {Point} output point
   */multByPoint(e){return this.clone()._multByPoint(e)}
/**
   * Divide this point's x & y coordinates by point,
   * yielding a new point.
   * @param {Point} p the other point
   * @return {Point} output point
   */divByPoint(e){return this.clone()._divByPoint(e)}
/**
   * Multiply this point's x & y coordinates by a factor,
   * yielding a new point.
   * @param {Number} k factor
   * @return {Point} output point
   */mult(e){return this.clone()._mult(e)}
/**
   * Divide this point's x & y coordinates by a factor,
   * yielding a new point.
   * @param {Point} k factor
   * @return {Point} output point
   */div(e){return this.clone()._div(e)}
/**
   * Rotate this point around the 0, 0 origin by an angle a,
   * given in radians
   * @param {Number} a angle to rotate around, in radians
   * @return {Point} output point
   */rotate(e){return this.clone()._rotate(e)}
/**
   * Rotate this point around p point by an angle a,
   * given in radians
   * @param {Number} a angle to rotate around, in radians
   * @param {Point} p Point to rotate around
   * @return {Point} output point
   */rotateAround(e,t){return this.clone()._rotateAround(e,t)}
/**
   * Multiply this point by a 4x1 transformation matrix
   * @param {Array<Number>} m transformation matrix
   * @return {Point} output point
   */matMult(e){return this.clone()._matMult(e)}unit(){return this.clone()._unit()}perp(){return this.clone()._perp()}round(){return this.clone()._round()}mag(){return Math.sqrt(this.x*this.x+this.y*this.y)}
/**
   * Judge whether this point is equal to another point, returning
   * true or false.
   * @param {Point} other the other point
   * @return {boolean} whether the points are equal
   */equals(e){return this.x===e.x&&this.y===e.y}
/**
   * Calculate the distance from this point to another point
   * @param {Point} p the other point
   * @return {Number} distance
   */dist(e){return Math.sqrt(this.distSqr(e))}
/**
   * Calculate the distance from this point to another point,
   * without the square root step. Useful if you're comparing
   * relative distances.
   * @param {Point} p the other point
   * @return {Number} distance
   */distSqr(e){const t=e.x-this.x;const o=e.y-this.y;return t*t+o*o}angle(){return Math.atan2(this.y,this.x)}
/**
   * Get the angle from this point to another point, in radians
   * @param {Point} b the other point
   * @return {Number} angle
   */angleTo(e){return Math.atan2(this.y-e.y,this.x-e.x)}
/**
   * Get the angle between this point and another point, in radians
   * @param {Point} b the other point
   * @return {Number} angle
   */angleWith(e){return this.angleWithSep(e.x,e.y)}
/*
   * Find the angle of the two vectors, solving the formula for
   * the cross product a x b = |a||b|sin(θ) for θ.
   * @param {Number} x the x-coordinate
   * @param {Number} y the y-coordinate
   * @return {Number} the angle in radians
   */angleWithSep(e,t){return Math.atan2(this.x*t-this.y*e,this.x*e+this.y*t)}
/**
   * Construct a point from an array if necessary, otherwise if the input
   * is already a Point, or an unknown type, return it unchanged
   * @param {Array<number> | Point} a any kind of input value
   * @return {Point} constructed point, or passed-through value.
   * @example
   * // this
   * var point = Point.convert([0, 1]);
   * // is equivalent to
   * var point = new Point(0, 1);
   */static convert(e){return e instanceof Point?e:Array.isArray(e)?new Point(e[0],e[1]):e}}var ie=Object.defineProperty;var se=Object.getOwnPropertySymbols;var ce=Object.prototype.hasOwnProperty;var ue=Object.prototype.propertyIsEnumerable;var __defNormalProp$2=(e,t,o)=>t in e?ie(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __spreadValues$1=(e,t)=>{for(var o in t||(t={}))ce.call(t,o)&&__defNormalProp$2(e,o,t[o]);if(se)for(var o of se(t))ue.call(t,o)&&__defNormalProp$2(e,o,t[o]);return e};function str2xml(e){if(typeof DOMParser!=="undefined"){const t=(new DOMParser).parseFromString(e,"application/xml");if(t.querySelector("parsererror"))throw new Error("The provided string is not valid XML");return t}throw new Error("No XML parser found")}function hasChildNodeWithName(e,t){if(!e.hasChildNodes())return false;for(const o of Array.from(e.childNodes)){const e=o.nodeName;if(typeof e==="string"&&e.trim().toLowerCase()===t.toLowerCase())return true}return false}function xml2str(e){if(typeof XMLSerializer!=="undefined")return(new XMLSerializer).serializeToString(e);throw new Error("No XML serializer found")}function gpx(e){typeof e==="string"&&(e=str2xml(e));if(!hasChildNodeWithName(e,"gpx"))throw new Error("The XML document is not valid GPX");const t=get(e,"trk");const o=get(e,"rte");const r=get(e,"wpt");const a={type:"FeatureCollection",features:[]};for(const e of Array.from(t)){const t=getTrack(e);t&&a.features.push(t)}for(const e of Array.from(o)){const t=getRoute(e);t&&a.features.push(t)}for(const e of Array.from(r))a.features.push(getPoint(e));return a}function kml(e,t){var o;typeof e==="string"&&(e=str2xml(e));if(!hasChildNodeWithName(e,"kml"))throw new Error("The XML document is not valid KML");const r={type:"FeatureCollection",features:[]};const a={};const n={};const l={};const i=get(e,"Placemark");const s=get(e,"Style");const c=get(e,"StyleMap");for(const e of Array.from(s)){const o=okhash(t!==void 0?t(e):xml2str(e)).toString(16);a["#"+attr(e,"id")]=o;n[o]=e}for(const e of Array.from(c)){a["#"+attr(e,"id")]=okhash(t!==void 0?t(e):xml2str(e)).toString(16);const r=get(e,"Pair");const n={};for(const e of Array.from(r))n[(o=nodeVal(get1(e,"key")))!=null?o:""]=nodeVal(get1(e,"styleUrl"));l["#"+attr(e,"id")]=n}for(const e of Array.from(i))r.features=r.features.concat(getPlacemark(e,a,n,l));return r}function kmlColor(e){if(e===null)return["#000000",1];let t="";let o=1;e.substring(0,1)==="#"&&(e=e.substring(1));e.length!==6&&e.length!==3||(t=e);if(e.length===8){o=parseInt(e.substring(0,2),16)/255;t="#"+e.substring(6,8)+e.substring(4,6)+e.substring(2,4)}return[t!=null?t:"#000000",o!=null?o:1]}function gxCoord(e){return numarray(e.split(" "))}function gxCoords(e){var t;let o=get(e,"coord");const r=[];const a=[];o.length===0&&(o=get(e,"gx:coord"));for(const e of Array.from(o))r.push(gxCoord((t=nodeVal(e))!=null?t:""));const n=get(e,"when");for(const e of Array.from(n))a.push(nodeVal(e));return{coords:r,times:a}}function getGeometry(e){var t,o,r;const a=["Polygon","LineString","Point","Track","gx:Track"];let n,l,i,s,c;const u=[];const p=[];if(get1(e,"MultiGeometry")!==null)return getGeometry(get1(e,"MultiGeometry"));if(get1(e,"MultiTrack")!==null)return getGeometry(get1(e,"MultiTrack"));if(get1(e,"gx:MultiTrack")!==null)return getGeometry(get1(e,"gx:MultiTrack"));for(i=0;i<a.length;i++){l=get(e,a[i]);if(l)for(s=0;s<l.length;s++){n=l[s];if(a[i]==="Point")u.push({type:"Point",coordinates:coord1((t=nodeVal(get1(n,"coordinates")))!=null?t:"")});else if(a[i]==="LineString")u.push({type:"LineString",coordinates:coord((o=nodeVal(get1(n,"coordinates")))!=null?o:"")});else if(a[i]==="Polygon"){const e=get(n,"LinearRing");const t=[];for(c=0;c<e.length;c++)t.push(coord((r=nodeVal(get1(e[c],"coordinates")))!=null?r:""));u.push({type:"Polygon",coordinates:t})}else if(a[i]==="Track"||a[i]==="gx:Track"){const e=gxCoords(n);u.push({type:"LineString",coordinates:e.coords});e.times.length&&p.push(e.times)}}}return{geoms:u,coordTimes:p}}function getPlacemark(e,t,o,r){var a,n,l,i,s,c,u,p,m,h;const d=getGeometry(e);const g={};const y=nodeVal(get1(e,"name"));const v=nodeVal(get1(e,"address"));const f=nodeVal(get1(e,"description"));const C=get1(e,"TimeSpan");const L=get1(e,"TimeStamp");const A=get1(e,"ExtendedData");const S=get1(e,"visibility");let b;let w=nodeVal(get1(e,"styleUrl"));let R=get1(e,"LineStyle");let T=get1(e,"PolyStyle");if(!d.geoms.length)return[];y&&(g.name=y);v&&(g.address=v);if(w){w[0]!=="#"&&(w="#"+w);g.styleUrl=w;t[w]&&(g.styleHash=t[w]);if(r[w]){g.styleMapHash=r[w];g.styleHash=t[(a=r[w].normal)!=null?a:""]}const e=o[(n=g.styleHash)!=null?n:""];if(e){R||(R=get1(e,"LineStyle"));T||(T=get1(e,"PolyStyle"));const t=get1(e,"IconStyle");if(t){const e=get1(t,"Icon");if(e){const t=nodeVal(get1(e,"href"));t&&(g.icon=t)}}}}f&&(g.description=f);if(C){const e=nodeVal(get1(C,"begin"));const t=nodeVal(get1(C,"end"));e&&t&&(g.timespan={begin:e,end:t})}L!==null&&(g.timestamp=(l=nodeVal(get1(L,"when")))!=null?l:(new Date).toISOString());if(R!==null){const e=kmlColor(nodeVal(get1(R,"color")));const t=e[0];const o=e[1];const r=parseFloat((i=nodeVal(get1(R,"width")))!=null?i:"");t&&(g.stroke=t);isNaN(o)||(g["stroke-opacity"]=o);isNaN(r)||(g["stroke-width"]=r)}if(T){const e=kmlColor(nodeVal(get1(T,"color")));const t=e[0];const o=e[1];const r=nodeVal(get1(T,"fill"));const a=nodeVal(get1(T,"outline"));t&&(g.fill=t);isNaN(o)||(g["fill-opacity"]=o);r&&(g["fill-opacity"]=r==="1"?g["fill-opacity"]||1:0);a&&(g["stroke-opacity"]=a==="1"?g["stroke-opacity"]||1:0)}if(A){const e=get(A,"Data"),t=get(A,"SimpleData");for(b=0;b<e.length;b++)g[(s=e[b].getAttribute("name"))!=null?s:""]=(c=nodeVal(get1(e[b],"value")))!=null?c:"";for(b=0;b<t.length;b++)g[(u=t[b].getAttribute("name"))!=null?u:""]=(p=nodeVal(t[b]))!=null?p:""}S!==null&&(g.visibility=(m=nodeVal(S))!=null?m:"");d.coordTimes.length!==0&&(g.coordTimes=d.coordTimes.length===1?d.coordTimes[0]:d.coordTimes);const P={type:"Feature",geometry:d.geoms.length===1?d.geoms[0]:{type:"GeometryCollection",geometries:d.geoms},properties:g};attr(e,"id")&&(P.id=(h=attr(e,"id"))!=null?h:void 0);return[P]}function getPoints(e,t){const o=get(e,t);const r=[];const a=[];let n=[];const l=o.length;if(!(l<2)){for(let e=0;e<l;e++){const t=coordPair(o[e]);r.push(t.coordinates);t.time&&a.push(t.time);if(t.heartRate||n.length){n.length===0&&(n=new Array(e).fill(null));n.push(t.heartRate)}}return{line:r,times:a,heartRates:n}}}function getTrack(e){const t=get(e,"trkseg");const o=[];const r=[];const a=[];let n;for(let e=0;e<t.length;e++){n=getPoints(t[e],"trkpt");if(n!==void 0){n.line&&o.push(n.line);n.times&&n.times.length&&r.push(n.times);if(a.length||n.heartRates&&n.heartRates.length){if(!a.length)for(let t=0;t<e;t++)a.push(new Array(o[t].length).fill(null));n.heartRates&&n.heartRates.length?a.push(n.heartRates):a.push(new Array(n.line.length).fill(null))}}}if(o.length===0)return;const l=__spreadValues$1(__spreadValues$1({},getProperties(e)),getLineStyle(get1(e,"extensions")));r.length!==0&&(l.coordTimes=o.length===1?r[0]:r);a.length!==0&&(l.heartRates=o.length===1?a[0]:a);return o.length===1?{type:"Feature",properties:l,geometry:{type:"LineString",coordinates:o[0]}}:{type:"Feature",properties:l,geometry:{type:"MultiLineString",coordinates:o}}}function getRoute(e){const t=getPoints(e,"rtept");if(t===void 0)return;const o=__spreadValues$1(__spreadValues$1({},getProperties(e)),getLineStyle(get1(e,"extensions")));return{type:"Feature",properties:o,geometry:{type:"LineString",coordinates:t.line}}}function getPoint(e){const t=__spreadValues$1(__spreadValues$1({},getProperties(e)),getMulti(e,["sym"]));return{type:"Feature",properties:t,geometry:{type:"Point",coordinates:coordPair(e).coordinates}}}function getLineStyle(e){var t,o;const r={};if(e){const a=get1(e,"line");if(a){const e=nodeVal(get1(a,"color"));const n=parseFloat((t=nodeVal(get1(a,"opacity")))!=null?t:"0");const l=parseFloat((o=nodeVal(get1(a,"width")))!=null?o:"0");e&&(r.stroke=e);isNaN(n)||(r["stroke-opacity"]=n);isNaN(l)||(r["stroke-width"]=l*96/25.4)}}return r}function getProperties(e){const t=getMulti(e,["name","cmt","desc","type","time","keywords"]);const o=get(e,"link");if(o.length!==0){t.links=[];for(const e of Array.from(o)){const o=__spreadValues$1({href:attr(e,"href")},getMulti(e,["text","type"]));t.links.push(o)}}return t}function okhash(e){let t=0;if(!e||!e.length)return t;for(let o=0;o<e.length;o++)t=(t<<5)-t+e.charCodeAt(o)|0;return t}function get(e,t){return e.getElementsByTagName(t)}function attr(e,t){return e.getAttribute(t)}function attrf(e,t){var o;return parseFloat((o=attr(e,t))!=null?o:"0")}function get1(e,t){const o=get(e,t);return o.length?o[0]:null}function norm(e){e.normalize&&e.normalize();return e}function numarray(e){return e.map(parseFloat).map((e=>isNaN(e)?null:e))}function nodeVal(e){e&&norm(e);return e&&e.textContent}function getMulti(e,t){var o;const r={};let a;let n;for(n=0;n<t.length;n++){a=get1(e,t[n]);a&&(r[t[n]]=(o=nodeVal(a))!=null?o:"")}return r}function coord1(e){return numarray(e.replace(/\s*/g,"").split(","))}function coord(e){const t=e.replace(/^\s*|\s*$/g,"").split(/\s+/);const o=[];for(const e of t)o.push(coord1(e));return o}function coordPair(e){var t,o;const r=[attrf(e,"lon"),attrf(e,"lat")];const a=get1(e,"ele");const n=get1(e,"gpxtpx:hr")||get1(e,"hr");const l=get1(e,"time");let i;if(a){i=parseFloat((t=nodeVal(a))!=null?t:"0");isNaN(i)||r.push(i)}return{coordinates:r,time:l?nodeVal(l):null,heartRate:n!==null?parseFloat((o=nodeVal(n))!=null?o:"0"):null}}function gpxOrKml(e){try{typeof e==="string"&&(e=str2xml(e))}catch(e){return null}try{const t=gpx(e);return t}catch(e){}try{const t=kml(e);return t}catch(e){}return null}var pe=Object.defineProperty;var __defNormalProp$1=(e,t,o)=>t in e?pe(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __publicField=(e,t,o)=>{__defNormalProp$1(e,typeof t!=="symbol"?t+"":t,o);return o};function componentToHex(e){const t=e.toString(16);return t.length==1?"0"+t:t}function rgbToHex(e){return"#"+componentToHex(e[0])+componentToHex(e[1])+componentToHex(e[2])+(e.length===4?componentToHex(e[3]):"")}class ColorRamp extends Array{constructor(e={}){super();__publicField(this,"min",0);__publicField(this,"max",1);"min"in e&&(this.min=e.min);"max"in e&&(this.max=e.max);"stops"in e&&this.setStops(e.stops,{clone:false})}
/**
   * Converts a array-definition color ramp definition into a usable ColorRamp instance.
   * Note: units are not converted and may need to to be converted beforehand (eg. kelvin to centigrade)
   * @param cr
   * @returns
   */static fromArrayDefinition(e){return new ColorRamp({stops:e.map((e=>({value:e[0],color:e[1]})))})}setStops(e,t={clone:true}){const o=t.clone?this.clone():this;o.length=0;let r=Infinity;let a=-Infinity;for(let t=0;t<e.length;t+=1){r=Math.min(r,e[t].value);a=Math.max(a,e[t].value);o.push({value:e[t].value,color:e[t].color.slice()})}o.sort(((e,t)=>e.value<t.value?-1:1));this.min=r;this.max=a;return o}scale(e,t,o={clone:true}){const r=o.clone;const a=this[0].value;const n=this.at(-1).value;const l=n-a;const i=t-e;const s=[];for(let t=0;t<this.length;t+=1){const o=this[t].value;const n=(o-a)/l;const c=n*i+e;r?s.push({value:c,color:this[t].color.slice()}):this[t].value=c}return r?new ColorRamp({stops:s}):this}at(e){return e<0?this[this.length+e]:this[e]}clone(){return new ColorRamp({stops:this.getRawColorStops()})}getRawColorStops(){const e=[];for(let t=0;t<this.length;t+=1)e.push({value:this[t].value,color:this[t].color});return e}reverse(e={clone:true}){const t=e.clone?this.clone():this;for(let e=0;e<~~(t.length/2);e+=1){const o=t[e].color;t[e].color=t.at(-(e+1)).color;t.at(-(e+1)).color=o}return t}getBounds(){return{min:this.min,max:this.max}}getColor(e,t={smooth:true}){if(e<=this[0].value)return this[0].color;if(e>=this.at(-1).value)return this.at(-1).color;for(let o=0;o<this.length-1;o+=1){if(e>this[o+1].value)continue;const r=this[o].color;if(!t.smooth)return r.slice();const a=this[o].value;const n=this[o+1].value;const l=this[o+1].color;const i=(n-e)/(n-a);return r.map(((e,t)=>Math.round(e*i+l[t]*(1-i))))}return[0,0,0]}getColorHex(e,t={smooth:true,withAlpha:false}){return rgbToHex(this.getColor(e,t))}getColorRelative(e,t={smooth:true}){const o=this.getBounds();return this.getColor(o.min+e*(o.max-o.min),t)}getCanvasStrip(e={horizontal:true,size:512,smooth:true}){const t=document.createElement("canvas");t.width=e.horizontal?e.size:1;t.height=e.horizontal?1:e.size;const o=t.getContext("2d");if(!o)throw new Error("Canvs context is missing");const r=o.getImageData(0,0,t.width,t.height);const a=r.data;const n=e.size;const l=this[0].value;const i=this.at(-1).value;const s=i-l;const c=s/n;for(let t=0;t<n;t+=1){const o=this.getColor(l+t*c,{smooth:e.smooth});a[t*4]=o[0];a[t*4+1]=o[1];a[t*4+2]=o[2];a[t*4+3]=o.length>3?o[3]:255}o.putImageData(r,0,0);return t}resample(e,t=15){const o=this.getBounds();const r=this.scale(0,1);const a=1/(t-1);let n;if(e==="ease-in-square")n=Array.from({length:t},((e,t)=>{const o=t*a;const n=Math.pow(o,2);const l=r.getColor(n);return{value:o,color:l}}));else if(e==="ease-out-square")n=Array.from({length:t},((e,t)=>{const o=t*a;const n=1-Math.pow(1-o,2);const l=r.getColor(n);return{value:o,color:l}}));else if(e==="ease-out-sqrt")n=Array.from({length:t},((e,t)=>{const o=t*a;const n=Math.pow(o,.5);const l=r.getColor(n);return{value:o,color:l}}));else if(e==="ease-in-sqrt")n=Array.from({length:t},((e,t)=>{const o=t*a;const n=1-Math.pow(1-o,.5);const l=r.getColor(n);return{value:o,color:l}}));else if(e==="ease-out-exp")n=Array.from({length:t},((e,t)=>{const o=t*a;const n=1-Math.pow(2,-10*o);const l=r.getColor(n);return{value:o,color:l}}));else{if(e!=="ease-in-exp")throw new Error("Invalid ressampling method.");n=Array.from({length:t},((e,t)=>{const o=t*a;const n=Math.pow(2,10*o-10);const l=r.getColor(n);return{value:o,color:l}}))}const l=new ColorRamp({stops:n});const i=l.scale(o.min,o.max);return i}transparentStart(){const e=this.getRawColorStops();e.unshift({value:e[0].value,color:e[0].color.slice()});e[1].value+=.001;e.forEach((e=>{e.color.length===3&&e.color.push(255)}));e[0].color[3]=0;return new ColorRamp({stops:e})}hasTransparentStart(){return this[0].color.length===4&&this[0].color[3]===0}}const me={NULL:new ColorRamp({stops:[{value:0,color:[0,0,0,0]},{value:1,color:[0,0,0,0]}]}),GRAY:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:1,color:[255,255,255]}]}),JET:new ColorRamp({stops:[{value:0,color:[0,0,131]},{value:.125,color:[0,60,170]},{value:.375,color:[5,255,255]},{value:.625,color:[255,255,0]},{value:.875,color:[250,0,0]},{value:1,color:[128,0,0]}]}),HSV:new ColorRamp({stops:[{value:0,color:[255,0,0]},{value:.169,color:[253,255,2]},{value:.173,color:[247,255,2]},{value:.337,color:[0,252,4]},{value:.341,color:[0,252,10]},{value:.506,color:[1,249,255]},{value:.671,color:[2,0,253]},{value:.675,color:[8,0,253]},{value:.839,color:[255,0,251]},{value:.843,color:[255,0,245]},{value:1,color:[255,0,6]}]}),HOT:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:.3,color:[230,0,0]},{value:.6,color:[255,210,0]},{value:1,color:[255,255,255]}]}),SPRING:new ColorRamp({stops:[{value:0,color:[255,0,255]},{value:1,color:[255,255,0]}]}),SUMMER:new ColorRamp({stops:[{value:0,color:[0,128,102]},{value:1,color:[255,255,102]}]}),AUTOMN:new ColorRamp({stops:[{value:0,color:[255,0,0]},{value:1,color:[255,255,0]}]}),WINTER:new ColorRamp({stops:[{value:0,color:[0,0,255]},{value:1,color:[0,255,128]}]}),BONE:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:.376,color:[84,84,116]},{value:.753,color:[169,200,200]},{value:1,color:[255,255,255]}]}),COPPER:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:.804,color:[255,160,102]},{value:1,color:[255,199,127]}]}),GREYS:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:1,color:[255,255,255]}]}),YIGNBU:new ColorRamp({stops:[{value:0,color:[8,29,88]},{value:.125,color:[37,52,148]},{value:.25,color:[34,94,168]},{value:.375,color:[29,145,192]},{value:.5,color:[65,182,196]},{value:.625,color:[127,205,187]},{value:.75,color:[199,233,180]},{value:.875,color:[237,248,217]},{value:1,color:[255,255,217]}]}),GREENS:new ColorRamp({stops:[{value:0,color:[0,68,27]},{value:.125,color:[0,109,44]},{value:.25,color:[35,139,69]},{value:.375,color:[65,171,93]},{value:.5,color:[116,196,118]},{value:.625,color:[161,217,155]},{value:.75,color:[199,233,192]},{value:.875,color:[229,245,224]},{value:1,color:[247,252,245]}]}),YIORRD:new ColorRamp({stops:[{value:0,color:[128,0,38]},{value:.125,color:[189,0,38]},{value:.25,color:[227,26,28]},{value:.375,color:[252,78,42]},{value:.5,color:[253,141,60]},{value:.625,color:[254,178,76]},{value:.75,color:[254,217,118]},{value:.875,color:[255,237,160]},{value:1,color:[255,255,204]}]}),BLUERED:new ColorRamp({stops:[{value:0,color:[0,0,255]},{value:1,color:[255,0,0]}]}),RDBU:new ColorRamp({stops:[{value:0,color:[5,10,172]},{value:.35,color:[106,137,247]},{value:.5,color:[190,190,190]},{value:.6,color:[220,170,132]},{value:.7,color:[230,145,90]},{value:1,color:[178,10,28]}]}),PICNIC:new ColorRamp({stops:[{value:0,color:[0,0,255]},{value:.1,color:[51,153,255]},{value:.2,color:[102,204,255]},{value:.3,color:[153,204,255]},{value:.4,color:[204,204,255]},{value:.5,color:[255,255,255]},{value:.6,color:[255,204,255]},{value:.7,color:[255,153,255]},{value:.8,color:[255,102,204]},{value:.9,color:[255,102,102]},{value:1,color:[255,0,0]}]}),RAINBOW:new ColorRamp({stops:[{value:0,color:[150,0,90]},{value:.125,color:[0,0,200]},{value:.25,color:[0,25,255]},{value:.375,color:[0,152,255]},{value:.5,color:[44,255,150]},{value:.625,color:[151,255,0]},{value:.75,color:[255,234,0]},{value:.875,color:[255,111,0]},{value:1,color:[255,0,0]}]}),PORTLAND:new ColorRamp({stops:[{value:0,color:[12,51,131]},{value:.25,color:[10,136,186]},{value:.5,color:[242,211,56]},{value:.75,color:[242,143,56]},{value:1,color:[217,30,30]}]}),BLACKBODY:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:.2,color:[230,0,0]},{value:.4,color:[230,210,0]},{value:.7,color:[255,255,255]},{value:1,color:[160,200,255]}]}),EARTH:new ColorRamp({stops:[{value:0,color:[0,0,130]},{value:.1,color:[0,180,180]},{value:.2,color:[40,210,40]},{value:.4,color:[230,230,50]},{value:.6,color:[120,70,20]},{value:1,color:[255,255,255]}]}),ELECTRIC:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:.15,color:[30,0,100]},{value:.4,color:[120,0,100]},{value:.6,color:[160,90,0]},{value:.8,color:[230,200,0]},{value:1,color:[255,250,220]}]}),VIRIDIS:new ColorRamp({stops:[{value:0,color:[68,1,84]},{value:.13,color:[71,44,122]},{value:.25,color:[59,81,139]},{value:.38,color:[44,113,142]},{value:.5,color:[33,144,141]},{value:.63,color:[39,173,129]},{value:.75,color:[92,200,99]},{value:.88,color:[170,220,50]},{value:1,color:[253,231,37]}]}),INFERNO:new ColorRamp({stops:[{value:0,color:[0,0,4]},{value:.13,color:[31,12,72]},{value:.25,color:[85,15,109]},{value:.38,color:[136,34,106]},{value:.5,color:[186,54,85]},{value:.63,color:[227,89,51]},{value:.75,color:[249,140,10]},{value:.88,color:[249,201,50]},{value:1,color:[252,255,164]}]}),MAGMA:new ColorRamp({stops:[{value:0,color:[0,0,4]},{value:.13,color:[28,16,68]},{value:.25,color:[79,18,123]},{value:.38,color:[129,37,129]},{value:.5,color:[181,54,122]},{value:.63,color:[229,80,100]},{value:.75,color:[251,135,97]},{value:.88,color:[254,194,135]},{value:1,color:[252,253,191]}]}),PLASMA:new ColorRamp({stops:[{value:0,color:[13,8,135]},{value:.13,color:[75,3,161]},{value:.25,color:[125,3,168]},{value:.38,color:[168,34,150]},{value:.5,color:[203,70,121]},{value:.63,color:[229,107,93]},{value:.75,color:[248,148,65]},{value:.88,color:[253,195,40]},{value:1,color:[240,249,33]}]}),WARM:new ColorRamp({stops:[{value:0,color:[125,0,179]},{value:.13,color:[172,0,187]},{value:.25,color:[219,0,170]},{value:.38,color:[255,0,130]},{value:.5,color:[255,63,74]},{value:.63,color:[255,123,0]},{value:.75,color:[234,176,0]},{value:.88,color:[190,228,0]},{value:1,color:[147,255,0]}]}),COOL:new ColorRamp({stops:[{value:0,color:[125,0,179]},{value:.13,color:[116,0,218]},{value:.25,color:[98,74,237]},{value:.38,color:[68,146,231]},{value:.5,color:[0,204,197]},{value:.63,color:[0,247,146]},{value:.75,color:[0,255,88]},{value:.88,color:[40,255,8]},{value:1,color:[147,255,0]}]}),RAINBOW_SOFT:new ColorRamp({stops:[{value:0,color:[125,0,179]},{value:.1,color:[199,0,180]},{value:.2,color:[255,0,121]},{value:.3,color:[255,108,0]},{value:.4,color:[222,194,0]},{value:.5,color:[150,255,0]},{value:.6,color:[0,255,55]},{value:.7,color:[0,246,150]},{value:.8,color:[50,167,222]},{value:.9,color:[103,51,235]},{value:1,color:[124,0,186]}]}),BATHYMETRY:new ColorRamp({stops:[{value:0,color:[40,26,44]},{value:.13,color:[59,49,90]},{value:.25,color:[64,76,139]},{value:.38,color:[63,110,151]},{value:.5,color:[72,142,158]},{value:.63,color:[85,174,163]},{value:.75,color:[120,206,163]},{value:.88,color:[187,230,172]},{value:1,color:[253,254,204]}]}),CDOM:new ColorRamp({stops:[{value:0,color:[47,15,62]},{value:.13,color:[87,23,86]},{value:.25,color:[130,28,99]},{value:.38,color:[171,41,96]},{value:.5,color:[206,67,86]},{value:.63,color:[230,106,84]},{value:.75,color:[242,149,103]},{value:.88,color:[249,193,135]},{value:1,color:[254,237,176]}]}),CHLOROPHYLL:new ColorRamp({stops:[{value:0,color:[18,36,20]},{value:.13,color:[25,63,41]},{value:.25,color:[24,91,59]},{value:.38,color:[13,119,72]},{value:.5,color:[18,148,80]},{value:.63,color:[80,173,89]},{value:.75,color:[132,196,122]},{value:.88,color:[175,221,162]},{value:1,color:[215,249,208]}]}),DENSITY:new ColorRamp({stops:[{value:0,color:[54,14,36]},{value:.13,color:[89,23,80]},{value:.25,color:[110,45,132]},{value:.38,color:[120,77,178]},{value:.5,color:[120,113,213]},{value:.63,color:[115,151,228]},{value:.75,color:[134,185,227]},{value:.88,color:[177,214,227]},{value:1,color:[230,241,241]}]}),FREESURFACE_BLUE:new ColorRamp({stops:[{value:0,color:[30,4,110]},{value:.13,color:[47,14,176]},{value:.25,color:[41,45,236]},{value:.38,color:[25,99,212]},{value:.5,color:[68,131,200]},{value:.63,color:[114,156,197]},{value:.75,color:[157,181,203]},{value:.88,color:[200,208,216]},{value:1,color:[241,237,236]}]}),FREESURFACE_RED:new ColorRamp({stops:[{value:0,color:[60,9,18]},{value:.13,color:[100,17,27]},{value:.25,color:[142,20,29]},{value:.38,color:[177,43,27]},{value:.5,color:[192,87,63]},{value:.63,color:[205,125,105]},{value:.75,color:[216,162,148]},{value:.88,color:[227,199,193]},{value:1,color:[241,237,236]}]}),OXYGEN:new ColorRamp({stops:[{value:0,color:[64,5,5]},{value:.13,color:[106,6,15]},{value:.25,color:[144,26,7]},{value:.38,color:[168,64,3]},{value:.5,color:[188,100,4]},{value:.63,color:[206,136,11]},{value:.75,color:[220,174,25]},{value:.88,color:[231,215,44]},{value:1,color:[248,254,105]}]}),PAR:new ColorRamp({stops:[{value:0,color:[51,20,24]},{value:.13,color:[90,32,35]},{value:.25,color:[129,44,34]},{value:.38,color:[159,68,25]},{value:.5,color:[182,99,19]},{value:.63,color:[199,134,22]},{value:.75,color:[212,171,35]},{value:.88,color:[221,210,54]},{value:1,color:[225,253,75]}]}),PHASE:new ColorRamp({stops:[{value:0,color:[145,105,18]},{value:.13,color:[184,71,38]},{value:.25,color:[186,58,115]},{value:.38,color:[160,71,185]},{value:.5,color:[110,97,218]},{value:.63,color:[50,123,164]},{value:.75,color:[31,131,110]},{value:.88,color:[77,129,34]},{value:1,color:[145,105,18]}]}),SALINITY:new ColorRamp({stops:[{value:0,color:[42,24,108]},{value:.13,color:[33,50,162]},{value:.25,color:[15,90,145]},{value:.38,color:[40,118,137]},{value:.5,color:[59,146,135]},{value:.63,color:[79,175,126]},{value:.75,color:[120,203,104]},{value:.88,color:[193,221,100]},{value:1,color:[253,239,154]}]}),TEMPERATURE:new ColorRamp({stops:[{value:0,color:[4,35,51]},{value:.13,color:[23,51,122]},{value:.25,color:[85,59,157]},{value:.38,color:[129,79,143]},{value:.5,color:[175,95,130]},{value:.63,color:[222,112,101]},{value:.75,color:[249,146,66]},{value:.88,color:[249,196,65]},{value:1,color:[232,250,91]}]}),TURBIDITY:new ColorRamp({stops:[{value:0,color:[34,31,27]},{value:.13,color:[65,50,41]},{value:.25,color:[98,69,52]},{value:.38,color:[131,89,57]},{value:.5,color:[161,112,59]},{value:.63,color:[185,140,66]},{value:.75,color:[202,174,88]},{value:.88,color:[216,209,126]},{value:1,color:[233,246,171]}]}),VELOCITY_BLUE:new ColorRamp({stops:[{value:0,color:[17,32,64]},{value:.13,color:[35,52,116]},{value:.25,color:[29,81,156]},{value:.38,color:[31,113,162]},{value:.5,color:[50,144,169]},{value:.63,color:[87,173,176]},{value:.75,color:[149,196,189]},{value:.88,color:[203,221,211]},{value:1,color:[254,251,230]}]}),VELOCITY_GREEN:new ColorRamp({stops:[{value:0,color:[23,35,19]},{value:.13,color:[24,64,38]},{value:.25,color:[11,95,45]},{value:.38,color:[39,123,35]},{value:.5,color:[95,146,12]},{value:.63,color:[152,165,18]},{value:.75,color:[201,186,69]},{value:.88,color:[233,216,137]},{value:1,color:[255,253,205]}]}),CUBEHELIX:new ColorRamp({stops:[{value:0,color:[0,0,0]},{value:.07,color:[22,5,59]},{value:.13,color:[60,4,105]},{value:.2,color:[109,1,135]},{value:.27,color:[161,0,147]},{value:.33,color:[210,2,142]},{value:.4,color:[251,11,123]},{value:.47,color:[255,29,97]},{value:.53,color:[255,54,69]},{value:.6,color:[255,85,46]},{value:.67,color:[255,120,34]},{value:.73,color:[255,157,37]},{value:.8,color:[241,191,57]},{value:.87,color:[224,220,93]},{value:.93,color:[218,241,142]},{value:1,color:[227,253,198]}]}),CIVIDIS:new ColorRamp({stops:[{value:0,color:[0,32,77,255]},{value:.125,color:[5,54,110,255]},{value:.25,color:[65,77,108,255]},{value:.375,color:[97,100,111,255]},{value:.5,color:[125,124,121,255]},{value:.625,color:[156,149,120,255]},{value:.75,color:[190,175,111,255]},{value:.875,color:[225,204,94,255]},{value:1,color:[255,235,70,255]}]}),TURBO:new ColorRamp({stops:[{value:0,color:[48,18,59,255]},{value:.125,color:[70,107,227,255]},{value:.25,color:[40,187,236,255]},{value:.375,color:[49,242,153,255]},{value:.5,color:[162,252,60,255]},{value:.625,color:[237,208,58,255]},{value:.75,color:[251,128,34,255]},{value:.875,color:[210,49,5,255]},{value:1,color:[122,4,3,255]}]}),ROCKET:new ColorRamp({stops:[{value:0,color:[250,235,221,0]},{value:.133,color:[250,235,221,255]},{value:.266,color:[246,170,130,255]},{value:.4,color:[240,96,67,255]},{value:.533,color:[203,27,79,255]},{value:.666,color:[132,30,90,255]},{value:.8,color:[63,27,68,255]},{value:1,color:[3,5,26,255]}]}),MAKO:new ColorRamp({stops:[{value:0,color:[11,4,5,255]},{value:.125,color:[43,28,53,255]},{value:.25,color:[62,53,107,255]},{value:.375,color:[59,86,152,255]},{value:.5,color:[53,123,162,255]},{value:.625,color:[53,158,170,255]},{value:.75,color:[73,193,173,255]},{value:.875,color:[150,221,181,255]},{value:1,color:[222,245,229,255]}]})};const he=[["#1D5B79","#468B97","#EF6262","#F3AA60"],["#614BC3","#33BBC5","#85E6C5","#C8FFE0"],["#461959","#7A316F","#CD6688","#AED8CC"],["#0079FF","#00DFA2","#F6FA70","#FF0060"],["#39B5E0","#A31ACB","#FF78F0","#F5EA5A"],["#37E2D5","#590696","#C70A80","#FBCB0A"],["#FFD36E","#FFF56D","#99FFCD","#9FB4FF"],["#00EAD3","#FFF5B7","#FF449F","#005F99"],["#10A19D","#540375","#FF7000","#FFBF00"]];function getRandomColor(){return he[~~(Math.random()*he.length)][~~(Math.random()*4)]}function generateRandomSourceName(){return`maptiler_source_${generateRandomString()}`}function generateRandomLayerName(){return`maptiler_layer_${generateRandomString()}`}function lerpZoomNumberValues(e,t){if(t<=e[0].zoom)return e[0].value;if(t>=e[e.length-1].zoom)return e[e.length-1].value;for(let o=0;o<e.length-1;o+=1)if(t>=e[o].zoom&&t<e[o+1].zoom){const r=e[o+1].zoom-e[o].zoom;const a=(t-e[o].zoom)/r;return a*e[o+1].value+(1-a)*e[o].value}return 0}function paintColorOptionsToPaintSpec(e){return["interpolate",["linear"],["zoom"],...e.map((e=>[e.zoom,e.value])).flat()]}function rampedOptionsToLayerPaintSpec(e){return["interpolate",["linear"],["zoom"],...e.map((e=>[e.zoom,e.value])).flat()]}function computeRampedOutlineWidth(e,t){if(typeof t==="number"&&typeof e==="number")return 2*t+e;if(typeof t==="number"&&Array.isArray(e))return["interpolate",["linear"],["zoom"],...e.map((e=>[e.zoom,2*t+e.value])).flat()];if(typeof e==="number"&&Array.isArray(t))return["interpolate",["linear"],["zoom"],...t.map((t=>[t.zoom,2*t.value+e])).flat()];if(Array.isArray(e)&&Array.isArray(t)){const o=Array.from(new Set([...e.map((e=>e.zoom)),...t.map((e=>e.zoom))])).sort(((e,t)=>e<t?-1:1));return["interpolate",["linear"],["zoom"],...o.map((o=>[o,2*lerpZoomNumberValues(t,o)+lerpZoomNumberValues(e,o)])).flat()]}return 0}function rampedPropertyValueWeight(e,t){return["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value])).flat()]}function dashArrayMaker(e){const t=e.trimStart();const o=`${t}${" ".repeat(e.length-t.length)}`;const r=Array.from(o);const a=r.every((e=>e===" "||e==="_"));if(!a)throw new Error("A dash pattern must be composed only of whitespace and underscore characters.");const n=r.some((e=>e==="_"))&&r.some((e=>e===" "));if(!n)throw new Error("A dash pattern must contain at least one underscore and one whitespace character");const l=[1];for(let e=1;e<r.length;e+=1){const t=r[e-1];const o=r[e];t===o?l[l.length-1]+=1:l.push(1)}return l}function colorDrivenByProperty(e,t){return["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.color])).flat()]}function radiusDrivenByProperty(e,t,o=true){return o?["interpolate",["linear"],["zoom"],0,["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.pointRadius*.025])).flat()],2,["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.pointRadius*.05])).flat()],4,["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.pointRadius*.1])).flat()],8,["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.pointRadius*.25])).flat()],16,["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.pointRadius])).flat()]]:["interpolate",["linear"],["get",t],...e.map((e=>[e.value,e.pointRadius])).flat()]}function radiusDrivenByPropertyHeatmap(e,t,o=true){return o?["interpolate",["linear"],["zoom"],0,["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value*.025])).flat()],2,["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value*.05])).flat()],4,["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value*.1])).flat()],8,["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value*.25])).flat()],16,["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value])).flat()]]:["interpolate",["linear"],["get",t],...e.map((e=>[e.propertyValue,e.value])).flat()]}function opacityDrivenByProperty(e,t){return e.every((t=>t.color[3]===e[0].color[3]))?e[0].color[3]?e[0].color[3]/255:1:["interpolate",["linear"],["get",t],...e.getRawColorStops().map((e=>{const t=e.value;const o=e.color;return[t,o.length===4?o[3]/255:1]})).flat()]}function heatmapIntensityFromColorRamp(e,t=10){return["interpolate",["linear"],["heatmap-density"],...Array.from({length:t+1},((o,r)=>{const a=r/t;return[a,e.getColorHex(a)]})).flat()]}var de=Object.defineProperty;var ge=Object.defineProperties;var ye=Object.getOwnPropertyDescriptors;var ve=Object.getOwnPropertySymbols;var fe=Object.prototype.hasOwnProperty;var Ce=Object.prototype.propertyIsEnumerable;var __defNormalProp=(e,t,o)=>t in e?de(e,t,{enumerable:true,configurable:true,writable:true,value:o}):e[t]=o;var __spreadValues=(e,t)=>{for(var o in t||(t={}))fe.call(t,o)&&__defNormalProp(e,o,t[o]);if(ve)for(var o of ve(t))Ce.call(t,o)&&__defNormalProp(e,o,t[o]);return e};var __spreadProps=(e,t)=>ge(e,ye(t));var __async=(e,t,o)=>new Promise(((r,a)=>{var fulfilled=e=>{try{step(o.next(e))}catch(e){a(e)}};var rejected=e=>{try{step(o.throw(e))}catch(e){a(e)}};var step=e=>e.done?r(e.value):Promise.resolve(e.value).then(fulfilled,rejected);step((o=o.apply(e,t)).next())}));function addPolyline(e,t){return __async(this,arguments,(function*(e,t,o={}){var r,a,n;if(!t.sourceId&&!t.data)throw new Error("Creating a polyline layer requires an existing .sourceId or a valid .data property");let l=t.data;if(typeof l==="string"){if(isUUID(l))l=`https://api.maptiler.com/data/${t.data}/features.json?key=${v.apiKey}`;else if(((r=l.split(".").pop())==null?void 0:r.toLowerCase().trim())==="gpx"){const e=yield fetch(l,o);const t=yield e.text();l=gpx(t)}else if(((a=l.split(".").pop())==null?void 0:a.toLowerCase().trim())==="kml"){const e=yield fetch(l,o);const t=yield e.text();l=kml(t)}else{const e=(n=jsonParseNoThrow(l))!=null?n:gpxOrKml(l);e&&(l=e)}if(!l)throw new Error("Polyline data was provided as string but is incompatible with valid formats.")}return addGeoJSONPolyline(e,__spreadProps(__spreadValues({},t),{data:l}))}))}function addGeoJSONPolyline(e,t){var o,r,a,n,l,i,s,c,u,p,m,h,d,g,y,v,f,C,L,A;if(t.layerId&&e.getLayer(t.layerId))throw new Error(`A layer already exists with the layer id: ${t.layerId}`);const S=(o=t.sourceId)!=null?o:generateRandomSourceName();const b=(r=t.layerId)!=null?r:generateRandomLayerName();const w={polylineLayerId:b,polylineOutlineLayerId:"",polylineSourceId:S};t.data&&!e.getSource(S)&&e.addSource(S,{type:"geojson",data:t.data});const R=(a=t.lineWidth)!=null?a:3;const T=(n=t.lineColor)!=null?n:getRandomColor();const P=(l=t.lineOpacity)!=null?l:1;const O=(i=t.lineBlur)!=null?i:0;const x=(s=t.lineGapWidth)!=null?s:0;let I=(c=t.lineDashArray)!=null?c:null;const _=(u=t.outlineWidth)!=null?u:1;const E=(p=t.outlineColor)!=null?p:"#FFFFFF";const N=(m=t.outlineOpacity)!=null?m:1;const M=(h=t.outlineBlur)!=null?h:0;typeof I==="string"&&(I=dashArrayMaker(I));if(t.outline===true){const o=`${b}_outline`;w.polylineOutlineLayerId=o;e.addLayer({id:o,type:"line",source:S,layout:{"line-join":(d=t.lineJoin)!=null?d:"round","line-cap":(g=t.lineCap)!=null?g:"round"},minzoom:(y=t.minzoom)!=null?y:0,maxzoom:(v=t.maxzoom)!=null?v:23,paint:{"line-opacity":typeof N==="number"?N:rampedOptionsToLayerPaintSpec(N),"line-color":typeof E==="string"?E:paintColorOptionsToPaintSpec(E),"line-width":computeRampedOutlineWidth(R,_),"line-blur":typeof M==="number"?M:rampedOptionsToLayerPaintSpec(M)}},t.beforeId)}e.addLayer({id:b,type:"line",source:S,layout:{"line-join":(f=t.lineJoin)!=null?f:"round","line-cap":(C=t.lineCap)!=null?C:"round"},minzoom:(L=t.minzoom)!=null?L:0,maxzoom:(A=t.maxzoom)!=null?A:23,paint:__spreadValues({"line-opacity":typeof P==="number"?P:rampedOptionsToLayerPaintSpec(P),"line-color":typeof T==="string"?T:paintColorOptionsToPaintSpec(T),"line-width":typeof R==="number"?R:rampedOptionsToLayerPaintSpec(R),"line-blur":typeof O==="number"?O:rampedOptionsToLayerPaintSpec(O),"line-gap-width":typeof x==="number"?x:rampedOptionsToLayerPaintSpec(x)},I&&{"line-dasharray":I})},t.beforeId);return w}function addPolygon(e,t){var o,r,a,n,l,i,s,c,u,p,m;if(t.layerId&&e.getLayer(t.layerId))throw new Error(`A layer already exists with the layer id: ${t.layerId}`);const h=(o=t.sourceId)!=null?o:generateRandomSourceName();const d=(r=t.layerId)!=null?r:generateRandomLayerName();const g={polygonLayerId:d,polygonOutlineLayerId:t.outline?`${d}_outline`:"",polygonSourceId:h};if(t.data&&!e.getSource(h)){let o=t.data;typeof o==="string"&&isUUID(o)&&(o=`https://api.maptiler.com/data/${o}/features.json?key=${v.apiKey}`);e.addSource(h,{type:"geojson",data:o})}let y=(a=t.outlineDashArray)!=null?a:null;const f=(n=t.outlineWidth)!=null?n:1;const C=(l=t.outlineColor)!=null?l:"#FFFFFF";const L=(i=t.outlineOpacity)!=null?i:1;const A=(s=t.outlineBlur)!=null?s:0;const S=(c=t.fillColor)!=null?c:getRandomColor();const b=(u=t.fillOpacity)!=null?u:1;const w=(p=t.outlinePosition)!=null?p:"center";const R=(m=t.pattern)!=null?m:null;typeof y==="string"&&(y=dashArrayMaker(y));const addLayers=(o=null)=>{var r,a,n,l,i,s;e.addLayer({id:d,type:"fill",source:h,minzoom:(r=t.minzoom)!=null?r:0,maxzoom:(a=t.maxzoom)!=null?a:23,paint:__spreadValues({"fill-color":typeof S==="string"?S:paintColorOptionsToPaintSpec(S),"fill-opacity":typeof b==="number"?b:rampedOptionsToLayerPaintSpec(b)},o&&{"fill-pattern":o})},t.beforeId);if(t.outline===true){let o;o=w==="inside"?typeof f==="number"?.5*f:rampedOptionsToLayerPaintSpec(f.map((({zoom:e,value:t})=>({zoom:e,value:.5*t})))):w==="outside"?typeof f==="number"?-.5*f:rampedOptionsToLayerPaintSpec(f.map((e=>({zoom:e.zoom,value:-.5*e.value})))):0;e.addLayer({id:g.polygonOutlineLayerId,type:"line",source:h,layout:{"line-join":(n=t.outlineJoin)!=null?n:"round","line-cap":(l=t.outlineCap)!=null?l:"butt"},minzoom:(i=t.minzoom)!=null?i:0,maxzoom:(s=t.maxzoom)!=null?s:23,paint:__spreadValues({"line-opacity":typeof L==="number"?L:rampedOptionsToLayerPaintSpec(L),"line-color":typeof C==="string"?C:paintColorOptionsToPaintSpec(C),"line-width":typeof f==="number"?f:rampedOptionsToLayerPaintSpec(f),"line-blur":typeof A==="number"?A:rampedOptionsToLayerPaintSpec(A),"line-offset":o},y&&{"line-dasharray":y})},t.beforeId)}};R?e.hasImage(R)?addLayers(R):e.loadImage(R,((t,o)=>{if(t){console.error("Could not load the pattern image.",t.message);return addLayers()}if(!o){console.error(`An image cannot be created from the pattern URL ${R}.`);return addLayers()}e.addImage(R,o);addLayers(R)})):addLayers();return g}function addPoint(e,t){var o,r,a,n,l,i,s,c,u,p,m,h,d,g,y,f;if(t.layerId&&e.getLayer(t.layerId))throw new Error(`A layer already exists with the layer id: ${t.layerId}`);const C=(o=t.minPointRadius)!=null?o:10;const L=(r=t.maxPointRadius)!=null?r:50;const A=(a=t.cluster)!=null&&a;const S=20;const b=Array.isArray(t.pointColor)?t.pointColor:me.TURBO.scale(10,t.cluster?1e4:1e3).resample("ease-out-square");const w=b.getBounds();const R=(n=t.sourceId)!=null?n:generateRandomSourceName();const T=(l=t.layerId)!=null?l:generateRandomLayerName();const P=(i=t.showLabel)!=null?i:A;const O=(s=t.alignOnViewport)==null||s;const x=(c=t.outline)!=null&&c;const I=(u=t.outlineOpacity)!=null?u:1;const _=(p=t.outlineWidth)!=null?p:1;const E=(m=t.outlineColor)!=null?m:"#FFFFFF";let N;const M=(h=t.zoomCompensation)==null||h;const k=(d=t.minzoom)!=null?d:0;const z=(g=t.maxzoom)!=null?g:23;N=typeof t.pointOpacity==="number"?t.pointOpacity:Array.isArray(t.pointOpacity)?rampedOptionsToLayerPaintSpec(t.pointOpacity):t.cluster?opacityDrivenByProperty(b,"point_count"):t.property?opacityDrivenByProperty(b,t.property):rampedOptionsToLayerPaintSpec([{zoom:k,value:0},{zoom:k+.25,value:1},{zoom:z-.25,value:1},{zoom:z,value:0}]);const B={pointLayerId:T,clusterLayerId:"",labelLayerId:"",pointSourceId:R};if(t.data&&!e.getSource(R)){let o=t.data;typeof o==="string"&&isUUID(o)&&(o=`https://api.maptiler.com/data/${o}/features.json?key=${v.apiKey}`);e.addSource(R,{type:"geojson",data:o,cluster:A})}if(A){B.clusterLayerId=`${T}_cluster`;const o=Array.from({length:S},((e,t)=>{const o=w.min+t*(w.max-w.min)/(S-1);return{value:o,pointRadius:C+(L-C)*Math.pow(t/(S-1),.5),color:b.getColorHex(o)}}));e.addLayer({id:B.clusterLayerId,type:"circle",source:R,filter:["has","point_count"],paint:__spreadValues({"circle-color":typeof t.pointColor==="string"?t.pointColor:colorDrivenByProperty(o,"point_count"),"circle-radius":typeof t.pointRadius==="number"?t.pointRadius:Array.isArray(t.pointRadius)?rampedOptionsToLayerPaintSpec(t.pointRadius):radiusDrivenByProperty(o,"point_count",false),"circle-pitch-alignment":O?"viewport":"map","circle-pitch-scale":"map","circle-opacity":N},x&&{"circle-stroke-opacity":typeof I==="number"?I:rampedOptionsToLayerPaintSpec(I),"circle-stroke-width":typeof _==="number"?_:rampedOptionsToLayerPaintSpec(_),"circle-stroke-color":typeof E==="string"?E:paintColorOptionsToPaintSpec(E)}),minzoom:k,maxzoom:z},t.beforeId);e.addLayer({id:B.pointLayerId,type:"circle",source:R,filter:["!",["has","point_count"]],paint:__spreadValues({"circle-pitch-alignment":O?"viewport":"map","circle-pitch-scale":"map","circle-color":typeof t.pointColor==="string"?t.pointColor:b.getColorHex(b.getBounds().min),"circle-radius":typeof t.pointRadius==="number"?t.pointRadius:Array.isArray(t.pointRadius)?rampedOptionsToLayerPaintSpec(t.pointRadius):o[0].pointRadius*.75,"circle-opacity":N},x&&{"circle-stroke-opacity":typeof I==="number"?I:rampedOptionsToLayerPaintSpec(I),"circle-stroke-width":typeof _==="number"?_:rampedOptionsToLayerPaintSpec(_),"circle-stroke-color":typeof E==="string"?E:paintColorOptionsToPaintSpec(E)}),minzoom:k,maxzoom:z},t.beforeId)}else{let o=typeof t.pointColor==="string"?t.pointColor:Array.isArray(t.pointColor)?t.pointColor.getColorHex(t.pointColor.getBounds().min):getRandomColor();let r=typeof t.pointRadius==="number"?M?rampedOptionsToLayerPaintSpec([{zoom:0,value:t.pointRadius*.025},{zoom:2,value:t.pointRadius*.05},{zoom:4,value:t.pointRadius*.1},{zoom:8,value:t.pointRadius*.25},{zoom:16,value:t.pointRadius*1}]):t.pointRadius:Array.isArray(t.pointRadius)?rampedOptionsToLayerPaintSpec(t.pointRadius):M?rampedOptionsToLayerPaintSpec([{zoom:0,value:C*.05},{zoom:2,value:C*.1},{zoom:4,value:C*.2},{zoom:8,value:C*.5},{zoom:16,value:C*1}]):C;if(t.property&&Array.isArray(t.pointColor)){const e=Array.from({length:S},((e,o)=>{const r=w.min+o*(w.max-w.min)/(S-1);return{value:r,pointRadius:typeof t.pointRadius==="number"?t.pointRadius:C+(L-C)*Math.pow(o/(S-1),.5),color:typeof t.pointColor==="string"?t.pointColor:b.getColorHex(r)}}));o=colorDrivenByProperty(e,t.property);r=radiusDrivenByProperty(e,t.property,M)}e.addLayer({id:B.pointLayerId,type:"circle",source:R,layout:{"circle-sort-key":t.property?["/",1,["get",t.property]]:0},paint:__spreadValues({"circle-pitch-alignment":O?"viewport":"map","circle-pitch-scale":"map","circle-color":o,"circle-opacity":N,"circle-radius":r},x&&{"circle-stroke-opacity":typeof I==="number"?I:rampedOptionsToLayerPaintSpec(I),"circle-stroke-width":typeof _==="number"?_:rampedOptionsToLayerPaintSpec(_),"circle-stroke-color":typeof E==="string"?E:paintColorOptionsToPaintSpec(E)}),minzoom:k,maxzoom:z},t.beforeId)}if(P!==false&&(t.cluster||t.property)){B.labelLayerId=`${T}_label`;const o=(y=t.labelColor)!=null?y:"#fff";const r=(f=t.labelSize)!=null?f:12;e.addLayer({id:B.labelLayerId,type:"symbol",source:R,filter:["has",t.cluster?"point_count":t.property],layout:{"text-field":t.cluster?"{point_count_abbreviated}":`{${t.property}}`,"text-font":["Noto Sans Regular"],"text-size":r,"text-pitch-alignment":O?"viewport":"map","symbol-sort-key":["/",1,["get",t.cluster?"point_count":t.property]]},paint:{"text-color":o,"text-opacity":N},minzoom:k,maxzoom:z},t.beforeId)}return B}function addHeatmap(e,t){var o,r,a,n,l,i,s,c,u,p;if(t.layerId&&e.getLayer(t.layerId))throw new Error(`A layer already exists with the layer id: ${t.layerId}`);const m=(o=t.sourceId)!=null?o:generateRandomSourceName();const h=(r=t.layerId)!=null?r:generateRandomLayerName();const d=(a=t.minzoom)!=null?a:0;const g=(n=t.maxzoom)!=null?n:23;const y=(l=t.zoomCompensation)==null||l;const f=(i=t.opacity)!=null?i:[{zoom:d,value:0},{zoom:d+.25,value:1},{zoom:g-.25,value:1},{zoom:g,value:0}];let C=Array.isArray(t.colorRamp)?t.colorRamp:me.TURBO.transparentStart();const L=C.getBounds();L.min===0&&L.max===1||(C=C.scale(0,1));C.hasTransparentStart()||(C=C.transparentStart());const A=(s=t.intensity)!=null?s:[{zoom:0,value:.01},{zoom:4,value:.2},{zoom:16,value:1}];const S=(c=t.property)!=null?c:null;const b=(u=t.weight)!=null?u:1;let w=1;if(S)if(typeof b==="number"){w=b;typeof t.weight==="number"&&console.warn("The option `.property` is ignored when `.propertyValueWeights` is not of type `PropertyValueWeights`")}else Array.isArray(b)?w=rampedPropertyValueWeight(b,S):console.warn("The option `.property` is ignored when `.propertyValueWeights` is not of type `PropertyValueWeights`");else typeof b==="number"?w=b:Array.isArray(b)&&console.warn("The options `.propertyValueWeights` can only be used when `.property` is provided.");const R=[{zoom:0,value:1.25},{zoom:2,value:2.5},{zoom:4,value:5},{zoom:8,value:12.5},{zoom:16,value:50}];const T=(p=t.radius)!=null?p:y?R:10;let P=1;if(typeof T==="number")P=T;else if(Array.isArray(T)&&"zoom"in T[0])P=rampedOptionsToLayerPaintSpec(T);else if(S&&Array.isArray(T)&&"propertyValue"in T[0])P=radiusDrivenByPropertyHeatmap(T,S,y);else if(!S&&Array.isArray(T)&&"propertyValue"in T[0]){P=rampedOptionsToLayerPaintSpec(R);console.warn("The option `.radius` can only be property-driven if the option `.property` is provided.")}else P=rampedOptionsToLayerPaintSpec(R);const O={heatmapLayerId:h,heatmapSourceId:m};if(t.data&&!e.getSource(m)){let o=t.data;typeof o==="string"&&isUUID(o)&&(o=`https://api.maptiler.com/data/${o}/features.json?key=${v.apiKey}`);e.addSource(m,{type:"geojson",data:o})}e.addLayer({id:h,type:"heatmap",source:m,minzoom:d,maxzoom:g,paint:{"heatmap-weight":w,"heatmap-intensity":typeof A==="number"?A:rampedOptionsToLayerPaintSpec(A),"heatmap-color":heatmapIntensityFromColorRamp(C),"heatmap-radius":P,"heatmap-opacity":typeof f==="number"?f:rampedOptionsToLayerPaintSpec(f)}});return O}const Le={addPolyline:addPolyline,addPolygon:addPolygon,addPoint:addPoint,addHeatmap:addHeatmap};const{setRTLTextPlugin:Ae,getRTLTextPluginStatus:Se,LngLat:be,LngLatBounds:we,MercatorCoordinate:Re,Evented:Te,AJAXError:Pe,prewarm:Oe,clearPrewarmedResources:xe,version:Ie,workerCount:_e,maxParallelImageRequests:Ee,workerUrl:Ne,addProtocol:Me,removeProtocol:ke}=e;const ze=e.Map;const Be=e.Marker;const Fe=e.Popup;const Ue=e.Style;const De=e.CanvasSource;const je=e.GeoJSONSource;const Ve=e.ImageSource;const He=e.RasterTileSource;const Ge=e.RasterDEMTileSource;const Ke=e.VectorTileSource;const We=e.VideoSource;e.NavigationControl;e.GeolocateControl;e.AttributionControl;e.LogoControl;e.ScaleControl;e.FullscreenControl;e.TerrainControl;export{Pe as AJAXError,AttributionControl,CanvasSource,De as CanvasSourceMLGL,ColorRamp,me as ColorRampCollection,Te as Evented,FullscreenControl,GeoJSONSource,je as GeoJSONSourceMLGL,GeolocateControl,ne as GeolocationType,ImageSource,Ve as ImageSourceMLGL,p as Language,be as LngLat,we as LngLatBounds,LogoControl,Map,ze as MapMLGL,MaptilerGeolocateControl,MaptilerLogoControl,MaptilerNavigationControl,MaptilerTerrainControl,Marker,Be as MarkerMLGL,Re as MercatorCoordinate,NavigationControl,Point,Popup,Fe as PopupMLGL,RasterDEMTileSource,Ge as RasterDEMTileSourceMLGL,RasterTileSource,He as RasterTileSourceMLGL,ScaleControl,SdkConfig,Style,Ue as StyleMLGL,TerrainControl,VectorTileSource,Ke as VectorTileSourceMLGL,VideoSource,We as VideoSourceMLGL,Me as addProtocol,xe as clearPrewarmedResources,v as config,getBrowserLanguage,Se as getRTLTextPluginStatus,gpx,gpxOrKml,hasChildNodeWithName,Le as helpers,isLanguageSupported,kml,Ee as maxParallelImageRequests,Oe as prewarm,ke as removeProtocol,Ae as setRTLTextPlugin,str2xml,Ie as version,_e as workerCount,Ne as workerUrl,xml2str};

